name: deploy

on:
  push:
    branches:
      - main
      - rework

permissions:
  contents: read
  packages: write

env:
  TARGET_NODE_VERSION: '18'
  TARGET_JAVA_VERSION: '17'

concurrency:
  group: deploy

jobs:
  publish-docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Use Node.js ${{ env.TARGET_NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.TARGET_NODE_VERSION }}
          cache: npm

      - name: Cache Kubernetes tools
        uses: actions/cache@v3
        with:
          path: scripts/.tools
          key: ${{ runner.os }}-k8stools-${{ hashFiles('scripts/download_tools.sh') }}

      - name: Install Node.js dependencies
        run: npm ci

      - name: Prepare Docker metadata
        id: docker-metadata
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/iamblueslime/placeholder_app_name
          tags: |
            type=ref,event=branch
            type=sha,format=long
            type=sha
            type=raw,value=latest

      - name: Write Docker metadata on temporary files
        shell: bash
        run: |
          echo "${{ steps.docker-metadata.outputs.tags }}" > /tmp/docker-tags
          echo "${{ steps.docker-metadata.outputs.labels }}" > /tmp/docker-labels

      - name: Publish images
        uses: mansagroup/nrwl-nx-action@v3
        with:
          targets: publish-docker
          parallel: 2
          args: /tmp/docker-tags /tmp/docker-labels

  publish-maven:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Use Node.js ${{ env.TARGET_NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.TARGET_NODE_VERSION }}
          cache: npm

      - name: Use Java ${{ env.TARGET_JAVA_VERSION }}
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: ${{ env.TARGET_JAVA_VERSION }}
          cache: 'gradle'

      - name: Import signing GPG key
        id: gpg-signing-key
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Cache Kubernetes tools
        uses: actions/cache@v3
        with:
          path: scripts/.tools
          key: ${{ runner.os }}-k8stools-${{ hashFiles('scripts/download_tools.sh') }}

      - name: Install Node.js dependencies
        run: npm ci

      - name: Publish packages
        uses: mansagroup/nrwl-nx-action@v3
        with:
          targets: publish-maven
          parallel: 3
        env:
          ORG_GRADLE_PROJECT_signing.gnupg.keyName: "${{ steps.gpg-signing-key.outputs.keyid }}"
          ORG_GRADLE_PROJECT_signing.gnupg.passphrase: "${{ secrets.GPG_PASSPHRASE }}"
          ARTIFACTORY_USERNAME: "${{ secrets.ARTIFACTORY_USERNAME }}"
          ARTIFACTORY_PASSWORD: "${{ secrets.ARTIFACTORY_PASSWORD }}"

  generate-docs:
    runs-on: ubuntu-latest

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Use Node.js ${{ env.TARGET_NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.TARGET_NODE_VERSION }}
          cache: npm

      - name: Setup Pages
        uses: actions/configure-pages@v2

      - name: Cache Kubernetes tools
        uses: actions/cache@v3
        with:
          path: scripts/.tools
          key: ${{ runner.os }}-k8stools-${{ hashFiles('scripts/download_tools.sh') }}

      - name: Install Node.js dependencies
        run: npm ci

      - name: Build Docusaurus
        uses: mansagroup/nrwl-nx-action@v3
        with:
          targets: build
          projects: docs

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: docs/build

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
