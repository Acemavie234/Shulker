/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.shulkermc.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.shulkermc.models.V1alpha1MinecraftServerSpecAffinity;
import io.shulkermc.models.V1alpha1MinecraftServerSpecMinecraftClusterRef;
import io.shulkermc.models.V1alpha1MinecraftServerSpecPodOverrides;
import io.shulkermc.models.V1alpha1MinecraftServerSpecRcon;
import io.shulkermc.models.V1alpha1MinecraftServerSpecResources;
import io.shulkermc.models.V1alpha1MinecraftServerSpecService;
import io.shulkermc.models.V1alpha1MinecraftServerSpecVersion;
import io.shulkermc.models.V1alpha1MinecraftServerSpecWorld;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Defines the defired state of a MinecraftServer. Most, to not say all, fields configurable in a Minecraft Server can be configured in this CRD.
 */
@ApiModel(description = "Defines the defired state of a MinecraftServer. Most, to not say all, fields configurable in a Minecraft Server can be configured in this CRD.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-03-11T15:13:51.331Z[Etc/UTC]")
public class V1alpha1MinecraftServerSpec {
  public static final String SERIALIZED_NAME_AFFINITY = "affinity";
  @SerializedName(SERIALIZED_NAME_AFFINITY)
  private V1alpha1MinecraftServerSpecAffinity affinity;

  public static final String SERIALIZED_NAME_MAX_PLAYERS = "maxPlayers";
  @SerializedName(SERIALIZED_NAME_MAX_PLAYERS)
  private Long maxPlayers;

  public static final String SERIALIZED_NAME_MINECRAFT_CLUSTER_REF = "minecraftClusterRef";
  @SerializedName(SERIALIZED_NAME_MINECRAFT_CLUSTER_REF)
  private V1alpha1MinecraftServerSpecMinecraftClusterRef minecraftClusterRef;

  public static final String SERIALIZED_NAME_MOTD = "motd";
  @SerializedName(SERIALIZED_NAME_MOTD)
  private String motd;

  public static final String SERIALIZED_NAME_OPERATORS = "operators";
  @SerializedName(SERIALIZED_NAME_OPERATORS)
  private List<String> operators = null;

  public static final String SERIALIZED_NAME_POD_OVERRIDES = "podOverrides";
  @SerializedName(SERIALIZED_NAME_POD_OVERRIDES)
  private V1alpha1MinecraftServerSpecPodOverrides podOverrides;

  public static final String SERIALIZED_NAME_RCON = "rcon";
  @SerializedName(SERIALIZED_NAME_RCON)
  private V1alpha1MinecraftServerSpecRcon rcon;

  public static final String SERIALIZED_NAME_RESOURCES = "resources";
  @SerializedName(SERIALIZED_NAME_RESOURCES)
  private V1alpha1MinecraftServerSpecResources resources;

  public static final String SERIALIZED_NAME_SERVER_ICON = "serverIcon";
  @SerializedName(SERIALIZED_NAME_SERVER_ICON)
  private String serverIcon;

  public static final String SERIALIZED_NAME_SERVICE = "service";
  @SerializedName(SERIALIZED_NAME_SERVICE)
  private V1alpha1MinecraftServerSpecService service;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private V1alpha1MinecraftServerSpecVersion version;

  public static final String SERIALIZED_NAME_WHITELISTED_PLAYERS = "whitelistedPlayers";
  @SerializedName(SERIALIZED_NAME_WHITELISTED_PLAYERS)
  private List<String> whitelistedPlayers = null;

  public static final String SERIALIZED_NAME_WORLD = "world";
  @SerializedName(SERIALIZED_NAME_WORLD)
  private V1alpha1MinecraftServerSpecWorld world;


  public V1alpha1MinecraftServerSpec affinity(V1alpha1MinecraftServerSpecAffinity affinity) {
    
    this.affinity = affinity;
    return this;
  }

   /**
   * Get affinity
   * @return affinity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1MinecraftServerSpecAffinity getAffinity() {
    return affinity;
  }


  public void setAffinity(V1alpha1MinecraftServerSpecAffinity affinity) {
    this.affinity = affinity;
  }


  public V1alpha1MinecraftServerSpec maxPlayers(Long maxPlayers) {
    
    this.maxPlayers = maxPlayers;
    return this;
  }

   /**
   * Number of maximum players that can connect to the Minecraft Server.
   * @return maxPlayers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Number of maximum players that can connect to the Minecraft Server.")

  public Long getMaxPlayers() {
    return maxPlayers;
  }


  public void setMaxPlayers(Long maxPlayers) {
    this.maxPlayers = maxPlayers;
  }


  public V1alpha1MinecraftServerSpec minecraftClusterRef(V1alpha1MinecraftServerSpecMinecraftClusterRef minecraftClusterRef) {
    
    this.minecraftClusterRef = minecraftClusterRef;
    return this;
  }

   /**
   * Get minecraftClusterRef
   * @return minecraftClusterRef
  **/
  @ApiModelProperty(required = true, value = "")

  public V1alpha1MinecraftServerSpecMinecraftClusterRef getMinecraftClusterRef() {
    return minecraftClusterRef;
  }


  public void setMinecraftClusterRef(V1alpha1MinecraftServerSpecMinecraftClusterRef minecraftClusterRef) {
    this.minecraftClusterRef = minecraftClusterRef;
  }


  public V1alpha1MinecraftServerSpec motd(String motd) {
    
    this.motd = motd;
    return this;
  }

   /**
   * Message to display when the players query the status of the Minecraft Server.
   * @return motd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Message to display when the players query the status of the Minecraft Server.")

  public String getMotd() {
    return motd;
  }


  public void setMotd(String motd) {
    this.motd = motd;
  }


  public V1alpha1MinecraftServerSpec operators(List<String> operators) {
    
    this.operators = operators;
    return this;
  }

  public V1alpha1MinecraftServerSpec addOperatorsItem(String operatorsItem) {
    if (this.operators == null) {
      this.operators = new ArrayList<>();
    }
    this.operators.add(operatorsItem);
    return this;
  }

   /**
   * List of players to be operators on the Minecraft Server.
   * @return operators
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of players to be operators on the Minecraft Server.")

  public List<String> getOperators() {
    return operators;
  }


  public void setOperators(List<String> operators) {
    this.operators = operators;
  }


  public V1alpha1MinecraftServerSpec podOverrides(V1alpha1MinecraftServerSpecPodOverrides podOverrides) {
    
    this.podOverrides = podOverrides;
    return this;
  }

   /**
   * Get podOverrides
   * @return podOverrides
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1MinecraftServerSpecPodOverrides getPodOverrides() {
    return podOverrides;
  }


  public void setPodOverrides(V1alpha1MinecraftServerSpecPodOverrides podOverrides) {
    this.podOverrides = podOverrides;
  }


  public V1alpha1MinecraftServerSpec rcon(V1alpha1MinecraftServerSpecRcon rcon) {
    
    this.rcon = rcon;
    return this;
  }

   /**
   * Get rcon
   * @return rcon
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1MinecraftServerSpecRcon getRcon() {
    return rcon;
  }


  public void setRcon(V1alpha1MinecraftServerSpecRcon rcon) {
    this.rcon = rcon;
  }


  public V1alpha1MinecraftServerSpec resources(V1alpha1MinecraftServerSpecResources resources) {
    
    this.resources = resources;
    return this;
  }

   /**
   * Get resources
   * @return resources
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1MinecraftServerSpecResources getResources() {
    return resources;
  }


  public void setResources(V1alpha1MinecraftServerSpecResources resources) {
    this.resources = resources;
  }


  public V1alpha1MinecraftServerSpec serverIcon(String serverIcon) {
    
    this.serverIcon = serverIcon;
    return this;
  }

   /**
   * Server icon image in base64 format.
   * @return serverIcon
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Server icon image in base64 format.")

  public String getServerIcon() {
    return serverIcon;
  }


  public void setServerIcon(String serverIcon) {
    this.serverIcon = serverIcon;
  }


  public V1alpha1MinecraftServerSpec service(V1alpha1MinecraftServerSpecService service) {
    
    this.service = service;
    return this;
  }

   /**
   * Get service
   * @return service
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1MinecraftServerSpecService getService() {
    return service;
  }


  public void setService(V1alpha1MinecraftServerSpecService service) {
    this.service = service;
  }


  public V1alpha1MinecraftServerSpec version(V1alpha1MinecraftServerSpecVersion version) {
    
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @ApiModelProperty(required = true, value = "")

  public V1alpha1MinecraftServerSpecVersion getVersion() {
    return version;
  }


  public void setVersion(V1alpha1MinecraftServerSpecVersion version) {
    this.version = version;
  }


  public V1alpha1MinecraftServerSpec whitelistedPlayers(List<String> whitelistedPlayers) {
    
    this.whitelistedPlayers = whitelistedPlayers;
    return this;
  }

  public V1alpha1MinecraftServerSpec addWhitelistedPlayersItem(String whitelistedPlayersItem) {
    if (this.whitelistedPlayers == null) {
      this.whitelistedPlayers = new ArrayList<>();
    }
    this.whitelistedPlayers.add(whitelistedPlayersItem);
    return this;
  }

   /**
   * List of players to be whitelisted on the Minecraft Server.
   * @return whitelistedPlayers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of players to be whitelisted on the Minecraft Server.")

  public List<String> getWhitelistedPlayers() {
    return whitelistedPlayers;
  }


  public void setWhitelistedPlayers(List<String> whitelistedPlayers) {
    this.whitelistedPlayers = whitelistedPlayers;
  }


  public V1alpha1MinecraftServerSpec world(V1alpha1MinecraftServerSpecWorld world) {
    
    this.world = world;
    return this;
  }

   /**
   * Get world
   * @return world
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1MinecraftServerSpecWorld getWorld() {
    return world;
  }


  public void setWorld(V1alpha1MinecraftServerSpecWorld world) {
    this.world = world;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha1MinecraftServerSpec v1alpha1MinecraftServerSpec = (V1alpha1MinecraftServerSpec) o;
    return Objects.equals(this.affinity, v1alpha1MinecraftServerSpec.affinity) &&
        Objects.equals(this.maxPlayers, v1alpha1MinecraftServerSpec.maxPlayers) &&
        Objects.equals(this.minecraftClusterRef, v1alpha1MinecraftServerSpec.minecraftClusterRef) &&
        Objects.equals(this.motd, v1alpha1MinecraftServerSpec.motd) &&
        Objects.equals(this.operators, v1alpha1MinecraftServerSpec.operators) &&
        Objects.equals(this.podOverrides, v1alpha1MinecraftServerSpec.podOverrides) &&
        Objects.equals(this.rcon, v1alpha1MinecraftServerSpec.rcon) &&
        Objects.equals(this.resources, v1alpha1MinecraftServerSpec.resources) &&
        Objects.equals(this.serverIcon, v1alpha1MinecraftServerSpec.serverIcon) &&
        Objects.equals(this.service, v1alpha1MinecraftServerSpec.service) &&
        Objects.equals(this.version, v1alpha1MinecraftServerSpec.version) &&
        Objects.equals(this.whitelistedPlayers, v1alpha1MinecraftServerSpec.whitelistedPlayers) &&
        Objects.equals(this.world, v1alpha1MinecraftServerSpec.world);
  }

  @Override
  public int hashCode() {
    return Objects.hash(affinity, maxPlayers, minecraftClusterRef, motd, operators, podOverrides, rcon, resources, serverIcon, service, version, whitelistedPlayers, world);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha1MinecraftServerSpec {\n");
    sb.append("    affinity: ").append(toIndentedString(affinity)).append("\n");
    sb.append("    maxPlayers: ").append(toIndentedString(maxPlayers)).append("\n");
    sb.append("    minecraftClusterRef: ").append(toIndentedString(minecraftClusterRef)).append("\n");
    sb.append("    motd: ").append(toIndentedString(motd)).append("\n");
    sb.append("    operators: ").append(toIndentedString(operators)).append("\n");
    sb.append("    podOverrides: ").append(toIndentedString(podOverrides)).append("\n");
    sb.append("    rcon: ").append(toIndentedString(rcon)).append("\n");
    sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
    sb.append("    serverIcon: ").append(toIndentedString(serverIcon)).append("\n");
    sb.append("    service: ").append(toIndentedString(service)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    whitelistedPlayers: ").append(toIndentedString(whitelistedPlayers)).append("\n");
    sb.append("    world: ").append(toIndentedString(world)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

