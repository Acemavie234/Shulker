// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/messages.proto

// Protobuf Java Version: 3.25.0
package dev.openmatch;

public interface PoolOrBuilder extends
    // @@protoc_insertion_point(interface_extends:openmatch.Pool)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * A developer-chosen human-readable name for this Pool.
   * </pre>
   *
   * <code>string name = 1 [json_name = "name"];</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * A developer-chosen human-readable name for this Pool.
   * </pre>
   *
   * <code>string name = 1 [json_name = "name"];</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * Set of Filters indicating the filtering criteria. Selected tickets must
   * match every Filter.
   * </pre>
   *
   * <code>repeated .openmatch.DoubleRangeFilter double_range_filters = 2 [json_name = "doubleRangeFilters"];</code>
   */
  java.util.List<dev.openmatch.DoubleRangeFilter> 
      getDoubleRangeFiltersList();
  /**
   * <pre>
   * Set of Filters indicating the filtering criteria. Selected tickets must
   * match every Filter.
   * </pre>
   *
   * <code>repeated .openmatch.DoubleRangeFilter double_range_filters = 2 [json_name = "doubleRangeFilters"];</code>
   */
  dev.openmatch.DoubleRangeFilter getDoubleRangeFilters(int index);
  /**
   * <pre>
   * Set of Filters indicating the filtering criteria. Selected tickets must
   * match every Filter.
   * </pre>
   *
   * <code>repeated .openmatch.DoubleRangeFilter double_range_filters = 2 [json_name = "doubleRangeFilters"];</code>
   */
  int getDoubleRangeFiltersCount();
  /**
   * <pre>
   * Set of Filters indicating the filtering criteria. Selected tickets must
   * match every Filter.
   * </pre>
   *
   * <code>repeated .openmatch.DoubleRangeFilter double_range_filters = 2 [json_name = "doubleRangeFilters"];</code>
   */
  java.util.List<? extends dev.openmatch.DoubleRangeFilterOrBuilder> 
      getDoubleRangeFiltersOrBuilderList();
  /**
   * <pre>
   * Set of Filters indicating the filtering criteria. Selected tickets must
   * match every Filter.
   * </pre>
   *
   * <code>repeated .openmatch.DoubleRangeFilter double_range_filters = 2 [json_name = "doubleRangeFilters"];</code>
   */
  dev.openmatch.DoubleRangeFilterOrBuilder getDoubleRangeFiltersOrBuilder(
      int index);

  /**
   * <code>repeated .openmatch.StringEqualsFilter string_equals_filters = 4 [json_name = "stringEqualsFilters"];</code>
   */
  java.util.List<dev.openmatch.StringEqualsFilter> 
      getStringEqualsFiltersList();
  /**
   * <code>repeated .openmatch.StringEqualsFilter string_equals_filters = 4 [json_name = "stringEqualsFilters"];</code>
   */
  dev.openmatch.StringEqualsFilter getStringEqualsFilters(int index);
  /**
   * <code>repeated .openmatch.StringEqualsFilter string_equals_filters = 4 [json_name = "stringEqualsFilters"];</code>
   */
  int getStringEqualsFiltersCount();
  /**
   * <code>repeated .openmatch.StringEqualsFilter string_equals_filters = 4 [json_name = "stringEqualsFilters"];</code>
   */
  java.util.List<? extends dev.openmatch.StringEqualsFilterOrBuilder> 
      getStringEqualsFiltersOrBuilderList();
  /**
   * <code>repeated .openmatch.StringEqualsFilter string_equals_filters = 4 [json_name = "stringEqualsFilters"];</code>
   */
  dev.openmatch.StringEqualsFilterOrBuilder getStringEqualsFiltersOrBuilder(
      int index);

  /**
   * <code>repeated .openmatch.TagPresentFilter tag_present_filters = 5 [json_name = "tagPresentFilters"];</code>
   */
  java.util.List<dev.openmatch.TagPresentFilter> 
      getTagPresentFiltersList();
  /**
   * <code>repeated .openmatch.TagPresentFilter tag_present_filters = 5 [json_name = "tagPresentFilters"];</code>
   */
  dev.openmatch.TagPresentFilter getTagPresentFilters(int index);
  /**
   * <code>repeated .openmatch.TagPresentFilter tag_present_filters = 5 [json_name = "tagPresentFilters"];</code>
   */
  int getTagPresentFiltersCount();
  /**
   * <code>repeated .openmatch.TagPresentFilter tag_present_filters = 5 [json_name = "tagPresentFilters"];</code>
   */
  java.util.List<? extends dev.openmatch.TagPresentFilterOrBuilder> 
      getTagPresentFiltersOrBuilderList();
  /**
   * <code>repeated .openmatch.TagPresentFilter tag_present_filters = 5 [json_name = "tagPresentFilters"];</code>
   */
  dev.openmatch.TagPresentFilterOrBuilder getTagPresentFiltersOrBuilder(
      int index);

  /**
   * <pre>
   * If specified, only Tickets created before the specified time are selected.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp created_before = 6 [json_name = "createdBefore"];</code>
   * @return Whether the createdBefore field is set.
   */
  boolean hasCreatedBefore();
  /**
   * <pre>
   * If specified, only Tickets created before the specified time are selected.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp created_before = 6 [json_name = "createdBefore"];</code>
   * @return The createdBefore.
   */
  com.google.protobuf.Timestamp getCreatedBefore();
  /**
   * <pre>
   * If specified, only Tickets created before the specified time are selected.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp created_before = 6 [json_name = "createdBefore"];</code>
   */
  com.google.protobuf.TimestampOrBuilder getCreatedBeforeOrBuilder();

  /**
   * <pre>
   * If specified, only Tickets created after the specified time are selected.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp created_after = 7 [json_name = "createdAfter"];</code>
   * @return Whether the createdAfter field is set.
   */
  boolean hasCreatedAfter();
  /**
   * <pre>
   * If specified, only Tickets created after the specified time are selected.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp created_after = 7 [json_name = "createdAfter"];</code>
   * @return The createdAfter.
   */
  com.google.protobuf.Timestamp getCreatedAfter();
  /**
   * <pre>
   * If specified, only Tickets created after the specified time are selected.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp created_after = 7 [json_name = "createdAfter"];</code>
   */
  com.google.protobuf.TimestampOrBuilder getCreatedAfterOrBuilder();
}
