// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/frontend.proto

// Protobuf Java Version: 3.25.0
package dev.openmatch;

/**
 * <pre>
 * UpdateBackfillRequest - update searchFields, extensions and set assignment.
 * 
 * BETA FEATURE WARNING: This Request message is not finalized and still subject
 * to possible change or removal.
 * </pre>
 *
 * Protobuf type {@code openmatch.UpdateBackfillRequest}
 */
public final class UpdateBackfillRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:openmatch.UpdateBackfillRequest)
    UpdateBackfillRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use UpdateBackfillRequest.newBuilder() to construct.
  private UpdateBackfillRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private UpdateBackfillRequest() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new UpdateBackfillRequest();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return dev.openmatch.FrontendProto.internal_static_openmatch_UpdateBackfillRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return dev.openmatch.FrontendProto.internal_static_openmatch_UpdateBackfillRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            dev.openmatch.UpdateBackfillRequest.class, dev.openmatch.UpdateBackfillRequest.Builder.class);
  }

  private int bitField0_;
  public static final int BACKFILL_FIELD_NUMBER = 1;
  private dev.openmatch.Backfill backfill_;
  /**
   * <pre>
   * A Backfill object with ID set and fields to update.
   * </pre>
   *
   * <code>.openmatch.Backfill backfill = 1 [json_name = "backfill"];</code>
   * @return Whether the backfill field is set.
   */
  @java.lang.Override
  public boolean hasBackfill() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * A Backfill object with ID set and fields to update.
   * </pre>
   *
   * <code>.openmatch.Backfill backfill = 1 [json_name = "backfill"];</code>
   * @return The backfill.
   */
  @java.lang.Override
  public dev.openmatch.Backfill getBackfill() {
    return backfill_ == null ? dev.openmatch.Backfill.getDefaultInstance() : backfill_;
  }
  /**
   * <pre>
   * A Backfill object with ID set and fields to update.
   * </pre>
   *
   * <code>.openmatch.Backfill backfill = 1 [json_name = "backfill"];</code>
   */
  @java.lang.Override
  public dev.openmatch.BackfillOrBuilder getBackfillOrBuilder() {
    return backfill_ == null ? dev.openmatch.Backfill.getDefaultInstance() : backfill_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(1, getBackfill());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getBackfill());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof dev.openmatch.UpdateBackfillRequest)) {
      return super.equals(obj);
    }
    dev.openmatch.UpdateBackfillRequest other = (dev.openmatch.UpdateBackfillRequest) obj;

    if (hasBackfill() != other.hasBackfill()) return false;
    if (hasBackfill()) {
      if (!getBackfill()
          .equals(other.getBackfill())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasBackfill()) {
      hash = (37 * hash) + BACKFILL_FIELD_NUMBER;
      hash = (53 * hash) + getBackfill().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static dev.openmatch.UpdateBackfillRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static dev.openmatch.UpdateBackfillRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static dev.openmatch.UpdateBackfillRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static dev.openmatch.UpdateBackfillRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static dev.openmatch.UpdateBackfillRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static dev.openmatch.UpdateBackfillRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static dev.openmatch.UpdateBackfillRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static dev.openmatch.UpdateBackfillRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static dev.openmatch.UpdateBackfillRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static dev.openmatch.UpdateBackfillRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static dev.openmatch.UpdateBackfillRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static dev.openmatch.UpdateBackfillRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(dev.openmatch.UpdateBackfillRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * UpdateBackfillRequest - update searchFields, extensions and set assignment.
   * 
   * BETA FEATURE WARNING: This Request message is not finalized and still subject
   * to possible change or removal.
   * </pre>
   *
   * Protobuf type {@code openmatch.UpdateBackfillRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:openmatch.UpdateBackfillRequest)
      dev.openmatch.UpdateBackfillRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dev.openmatch.FrontendProto.internal_static_openmatch_UpdateBackfillRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dev.openmatch.FrontendProto.internal_static_openmatch_UpdateBackfillRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dev.openmatch.UpdateBackfillRequest.class, dev.openmatch.UpdateBackfillRequest.Builder.class);
    }

    // Construct using dev.openmatch.UpdateBackfillRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getBackfillFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      backfill_ = null;
      if (backfillBuilder_ != null) {
        backfillBuilder_.dispose();
        backfillBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return dev.openmatch.FrontendProto.internal_static_openmatch_UpdateBackfillRequest_descriptor;
    }

    @java.lang.Override
    public dev.openmatch.UpdateBackfillRequest getDefaultInstanceForType() {
      return dev.openmatch.UpdateBackfillRequest.getDefaultInstance();
    }

    @java.lang.Override
    public dev.openmatch.UpdateBackfillRequest build() {
      dev.openmatch.UpdateBackfillRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public dev.openmatch.UpdateBackfillRequest buildPartial() {
      dev.openmatch.UpdateBackfillRequest result = new dev.openmatch.UpdateBackfillRequest(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(dev.openmatch.UpdateBackfillRequest result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.backfill_ = backfillBuilder_ == null
            ? backfill_
            : backfillBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof dev.openmatch.UpdateBackfillRequest) {
        return mergeFrom((dev.openmatch.UpdateBackfillRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(dev.openmatch.UpdateBackfillRequest other) {
      if (other == dev.openmatch.UpdateBackfillRequest.getDefaultInstance()) return this;
      if (other.hasBackfill()) {
        mergeBackfill(other.getBackfill());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getBackfillFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private dev.openmatch.Backfill backfill_;
    private com.google.protobuf.SingleFieldBuilderV3<
        dev.openmatch.Backfill, dev.openmatch.Backfill.Builder, dev.openmatch.BackfillOrBuilder> backfillBuilder_;
    /**
     * <pre>
     * A Backfill object with ID set and fields to update.
     * </pre>
     *
     * <code>.openmatch.Backfill backfill = 1 [json_name = "backfill"];</code>
     * @return Whether the backfill field is set.
     */
    public boolean hasBackfill() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * A Backfill object with ID set and fields to update.
     * </pre>
     *
     * <code>.openmatch.Backfill backfill = 1 [json_name = "backfill"];</code>
     * @return The backfill.
     */
    public dev.openmatch.Backfill getBackfill() {
      if (backfillBuilder_ == null) {
        return backfill_ == null ? dev.openmatch.Backfill.getDefaultInstance() : backfill_;
      } else {
        return backfillBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * A Backfill object with ID set and fields to update.
     * </pre>
     *
     * <code>.openmatch.Backfill backfill = 1 [json_name = "backfill"];</code>
     */
    public Builder setBackfill(dev.openmatch.Backfill value) {
      if (backfillBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        backfill_ = value;
      } else {
        backfillBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A Backfill object with ID set and fields to update.
     * </pre>
     *
     * <code>.openmatch.Backfill backfill = 1 [json_name = "backfill"];</code>
     */
    public Builder setBackfill(
        dev.openmatch.Backfill.Builder builderForValue) {
      if (backfillBuilder_ == null) {
        backfill_ = builderForValue.build();
      } else {
        backfillBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A Backfill object with ID set and fields to update.
     * </pre>
     *
     * <code>.openmatch.Backfill backfill = 1 [json_name = "backfill"];</code>
     */
    public Builder mergeBackfill(dev.openmatch.Backfill value) {
      if (backfillBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          backfill_ != null &&
          backfill_ != dev.openmatch.Backfill.getDefaultInstance()) {
          getBackfillBuilder().mergeFrom(value);
        } else {
          backfill_ = value;
        }
      } else {
        backfillBuilder_.mergeFrom(value);
      }
      if (backfill_ != null) {
        bitField0_ |= 0x00000001;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * A Backfill object with ID set and fields to update.
     * </pre>
     *
     * <code>.openmatch.Backfill backfill = 1 [json_name = "backfill"];</code>
     */
    public Builder clearBackfill() {
      bitField0_ = (bitField0_ & ~0x00000001);
      backfill_ = null;
      if (backfillBuilder_ != null) {
        backfillBuilder_.dispose();
        backfillBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A Backfill object with ID set and fields to update.
     * </pre>
     *
     * <code>.openmatch.Backfill backfill = 1 [json_name = "backfill"];</code>
     */
    public dev.openmatch.Backfill.Builder getBackfillBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getBackfillFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * A Backfill object with ID set and fields to update.
     * </pre>
     *
     * <code>.openmatch.Backfill backfill = 1 [json_name = "backfill"];</code>
     */
    public dev.openmatch.BackfillOrBuilder getBackfillOrBuilder() {
      if (backfillBuilder_ != null) {
        return backfillBuilder_.getMessageOrBuilder();
      } else {
        return backfill_ == null ?
            dev.openmatch.Backfill.getDefaultInstance() : backfill_;
      }
    }
    /**
     * <pre>
     * A Backfill object with ID set and fields to update.
     * </pre>
     *
     * <code>.openmatch.Backfill backfill = 1 [json_name = "backfill"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        dev.openmatch.Backfill, dev.openmatch.Backfill.Builder, dev.openmatch.BackfillOrBuilder> 
        getBackfillFieldBuilder() {
      if (backfillBuilder_ == null) {
        backfillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            dev.openmatch.Backfill, dev.openmatch.Backfill.Builder, dev.openmatch.BackfillOrBuilder>(
                getBackfill(),
                getParentForChildren(),
                isClean());
        backfill_ = null;
      }
      return backfillBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:openmatch.UpdateBackfillRequest)
  }

  // @@protoc_insertion_point(class_scope:openmatch.UpdateBackfillRequest)
  private static final dev.openmatch.UpdateBackfillRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new dev.openmatch.UpdateBackfillRequest();
  }

  public static dev.openmatch.UpdateBackfillRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<UpdateBackfillRequest>
      PARSER = new com.google.protobuf.AbstractParser<UpdateBackfillRequest>() {
    @java.lang.Override
    public UpdateBackfillRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<UpdateBackfillRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<UpdateBackfillRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public dev.openmatch.UpdateBackfillRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

