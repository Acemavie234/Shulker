// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/messages.proto

// Protobuf Java Version: 3.25.0
package dev.openmatch;

/**
 * <pre>
 * Pool specfies a set of criteria that are used to select a subset of Tickets
 * that meet all the criteria.
 * </pre>
 *
 * Protobuf type {@code openmatch.Pool}
 */
public final class Pool extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:openmatch.Pool)
    PoolOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Pool.newBuilder() to construct.
  private Pool(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Pool() {
    name_ = "";
    doubleRangeFilters_ = java.util.Collections.emptyList();
    stringEqualsFilters_ = java.util.Collections.emptyList();
    tagPresentFilters_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Pool();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return dev.openmatch.MessagesProto.internal_static_openmatch_Pool_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return dev.openmatch.MessagesProto.internal_static_openmatch_Pool_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            dev.openmatch.Pool.class, dev.openmatch.Pool.Builder.class);
  }

  private int bitField0_;
  public static final int NAME_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object name_ = "";
  /**
   * <pre>
   * A developer-chosen human-readable name for this Pool.
   * </pre>
   *
   * <code>string name = 1 [json_name = "name"];</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * A developer-chosen human-readable name for this Pool.
   * </pre>
   *
   * <code>string name = 1 [json_name = "name"];</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DOUBLE_RANGE_FILTERS_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<dev.openmatch.DoubleRangeFilter> doubleRangeFilters_;
  /**
   * <pre>
   * Set of Filters indicating the filtering criteria. Selected tickets must
   * match every Filter.
   * </pre>
   *
   * <code>repeated .openmatch.DoubleRangeFilter double_range_filters = 2 [json_name = "doubleRangeFilters"];</code>
   */
  @java.lang.Override
  public java.util.List<dev.openmatch.DoubleRangeFilter> getDoubleRangeFiltersList() {
    return doubleRangeFilters_;
  }
  /**
   * <pre>
   * Set of Filters indicating the filtering criteria. Selected tickets must
   * match every Filter.
   * </pre>
   *
   * <code>repeated .openmatch.DoubleRangeFilter double_range_filters = 2 [json_name = "doubleRangeFilters"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends dev.openmatch.DoubleRangeFilterOrBuilder> 
      getDoubleRangeFiltersOrBuilderList() {
    return doubleRangeFilters_;
  }
  /**
   * <pre>
   * Set of Filters indicating the filtering criteria. Selected tickets must
   * match every Filter.
   * </pre>
   *
   * <code>repeated .openmatch.DoubleRangeFilter double_range_filters = 2 [json_name = "doubleRangeFilters"];</code>
   */
  @java.lang.Override
  public int getDoubleRangeFiltersCount() {
    return doubleRangeFilters_.size();
  }
  /**
   * <pre>
   * Set of Filters indicating the filtering criteria. Selected tickets must
   * match every Filter.
   * </pre>
   *
   * <code>repeated .openmatch.DoubleRangeFilter double_range_filters = 2 [json_name = "doubleRangeFilters"];</code>
   */
  @java.lang.Override
  public dev.openmatch.DoubleRangeFilter getDoubleRangeFilters(int index) {
    return doubleRangeFilters_.get(index);
  }
  /**
   * <pre>
   * Set of Filters indicating the filtering criteria. Selected tickets must
   * match every Filter.
   * </pre>
   *
   * <code>repeated .openmatch.DoubleRangeFilter double_range_filters = 2 [json_name = "doubleRangeFilters"];</code>
   */
  @java.lang.Override
  public dev.openmatch.DoubleRangeFilterOrBuilder getDoubleRangeFiltersOrBuilder(
      int index) {
    return doubleRangeFilters_.get(index);
  }

  public static final int STRING_EQUALS_FILTERS_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private java.util.List<dev.openmatch.StringEqualsFilter> stringEqualsFilters_;
  /**
   * <code>repeated .openmatch.StringEqualsFilter string_equals_filters = 4 [json_name = "stringEqualsFilters"];</code>
   */
  @java.lang.Override
  public java.util.List<dev.openmatch.StringEqualsFilter> getStringEqualsFiltersList() {
    return stringEqualsFilters_;
  }
  /**
   * <code>repeated .openmatch.StringEqualsFilter string_equals_filters = 4 [json_name = "stringEqualsFilters"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends dev.openmatch.StringEqualsFilterOrBuilder> 
      getStringEqualsFiltersOrBuilderList() {
    return stringEqualsFilters_;
  }
  /**
   * <code>repeated .openmatch.StringEqualsFilter string_equals_filters = 4 [json_name = "stringEqualsFilters"];</code>
   */
  @java.lang.Override
  public int getStringEqualsFiltersCount() {
    return stringEqualsFilters_.size();
  }
  /**
   * <code>repeated .openmatch.StringEqualsFilter string_equals_filters = 4 [json_name = "stringEqualsFilters"];</code>
   */
  @java.lang.Override
  public dev.openmatch.StringEqualsFilter getStringEqualsFilters(int index) {
    return stringEqualsFilters_.get(index);
  }
  /**
   * <code>repeated .openmatch.StringEqualsFilter string_equals_filters = 4 [json_name = "stringEqualsFilters"];</code>
   */
  @java.lang.Override
  public dev.openmatch.StringEqualsFilterOrBuilder getStringEqualsFiltersOrBuilder(
      int index) {
    return stringEqualsFilters_.get(index);
  }

  public static final int TAG_PRESENT_FILTERS_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private java.util.List<dev.openmatch.TagPresentFilter> tagPresentFilters_;
  /**
   * <code>repeated .openmatch.TagPresentFilter tag_present_filters = 5 [json_name = "tagPresentFilters"];</code>
   */
  @java.lang.Override
  public java.util.List<dev.openmatch.TagPresentFilter> getTagPresentFiltersList() {
    return tagPresentFilters_;
  }
  /**
   * <code>repeated .openmatch.TagPresentFilter tag_present_filters = 5 [json_name = "tagPresentFilters"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends dev.openmatch.TagPresentFilterOrBuilder> 
      getTagPresentFiltersOrBuilderList() {
    return tagPresentFilters_;
  }
  /**
   * <code>repeated .openmatch.TagPresentFilter tag_present_filters = 5 [json_name = "tagPresentFilters"];</code>
   */
  @java.lang.Override
  public int getTagPresentFiltersCount() {
    return tagPresentFilters_.size();
  }
  /**
   * <code>repeated .openmatch.TagPresentFilter tag_present_filters = 5 [json_name = "tagPresentFilters"];</code>
   */
  @java.lang.Override
  public dev.openmatch.TagPresentFilter getTagPresentFilters(int index) {
    return tagPresentFilters_.get(index);
  }
  /**
   * <code>repeated .openmatch.TagPresentFilter tag_present_filters = 5 [json_name = "tagPresentFilters"];</code>
   */
  @java.lang.Override
  public dev.openmatch.TagPresentFilterOrBuilder getTagPresentFiltersOrBuilder(
      int index) {
    return tagPresentFilters_.get(index);
  }

  public static final int CREATED_BEFORE_FIELD_NUMBER = 6;
  private com.google.protobuf.Timestamp createdBefore_;
  /**
   * <pre>
   * If specified, only Tickets created before the specified time are selected.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp created_before = 6 [json_name = "createdBefore"];</code>
   * @return Whether the createdBefore field is set.
   */
  @java.lang.Override
  public boolean hasCreatedBefore() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * If specified, only Tickets created before the specified time are selected.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp created_before = 6 [json_name = "createdBefore"];</code>
   * @return The createdBefore.
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getCreatedBefore() {
    return createdBefore_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : createdBefore_;
  }
  /**
   * <pre>
   * If specified, only Tickets created before the specified time are selected.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp created_before = 6 [json_name = "createdBefore"];</code>
   */
  @java.lang.Override
  public com.google.protobuf.TimestampOrBuilder getCreatedBeforeOrBuilder() {
    return createdBefore_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : createdBefore_;
  }

  public static final int CREATED_AFTER_FIELD_NUMBER = 7;
  private com.google.protobuf.Timestamp createdAfter_;
  /**
   * <pre>
   * If specified, only Tickets created after the specified time are selected.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp created_after = 7 [json_name = "createdAfter"];</code>
   * @return Whether the createdAfter field is set.
   */
  @java.lang.Override
  public boolean hasCreatedAfter() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * If specified, only Tickets created after the specified time are selected.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp created_after = 7 [json_name = "createdAfter"];</code>
   * @return The createdAfter.
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getCreatedAfter() {
    return createdAfter_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : createdAfter_;
  }
  /**
   * <pre>
   * If specified, only Tickets created after the specified time are selected.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp created_after = 7 [json_name = "createdAfter"];</code>
   */
  @java.lang.Override
  public com.google.protobuf.TimestampOrBuilder getCreatedAfterOrBuilder() {
    return createdAfter_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : createdAfter_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
    }
    for (int i = 0; i < doubleRangeFilters_.size(); i++) {
      output.writeMessage(2, doubleRangeFilters_.get(i));
    }
    for (int i = 0; i < stringEqualsFilters_.size(); i++) {
      output.writeMessage(4, stringEqualsFilters_.get(i));
    }
    for (int i = 0; i < tagPresentFilters_.size(); i++) {
      output.writeMessage(5, tagPresentFilters_.get(i));
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(6, getCreatedBefore());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(7, getCreatedAfter());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
    }
    for (int i = 0; i < doubleRangeFilters_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, doubleRangeFilters_.get(i));
    }
    for (int i = 0; i < stringEqualsFilters_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, stringEqualsFilters_.get(i));
    }
    for (int i = 0; i < tagPresentFilters_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, tagPresentFilters_.get(i));
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getCreatedBefore());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, getCreatedAfter());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof dev.openmatch.Pool)) {
      return super.equals(obj);
    }
    dev.openmatch.Pool other = (dev.openmatch.Pool) obj;

    if (!getName()
        .equals(other.getName())) return false;
    if (!getDoubleRangeFiltersList()
        .equals(other.getDoubleRangeFiltersList())) return false;
    if (!getStringEqualsFiltersList()
        .equals(other.getStringEqualsFiltersList())) return false;
    if (!getTagPresentFiltersList()
        .equals(other.getTagPresentFiltersList())) return false;
    if (hasCreatedBefore() != other.hasCreatedBefore()) return false;
    if (hasCreatedBefore()) {
      if (!getCreatedBefore()
          .equals(other.getCreatedBefore())) return false;
    }
    if (hasCreatedAfter() != other.hasCreatedAfter()) return false;
    if (hasCreatedAfter()) {
      if (!getCreatedAfter()
          .equals(other.getCreatedAfter())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    if (getDoubleRangeFiltersCount() > 0) {
      hash = (37 * hash) + DOUBLE_RANGE_FILTERS_FIELD_NUMBER;
      hash = (53 * hash) + getDoubleRangeFiltersList().hashCode();
    }
    if (getStringEqualsFiltersCount() > 0) {
      hash = (37 * hash) + STRING_EQUALS_FILTERS_FIELD_NUMBER;
      hash = (53 * hash) + getStringEqualsFiltersList().hashCode();
    }
    if (getTagPresentFiltersCount() > 0) {
      hash = (37 * hash) + TAG_PRESENT_FILTERS_FIELD_NUMBER;
      hash = (53 * hash) + getTagPresentFiltersList().hashCode();
    }
    if (hasCreatedBefore()) {
      hash = (37 * hash) + CREATED_BEFORE_FIELD_NUMBER;
      hash = (53 * hash) + getCreatedBefore().hashCode();
    }
    if (hasCreatedAfter()) {
      hash = (37 * hash) + CREATED_AFTER_FIELD_NUMBER;
      hash = (53 * hash) + getCreatedAfter().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static dev.openmatch.Pool parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static dev.openmatch.Pool parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static dev.openmatch.Pool parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static dev.openmatch.Pool parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static dev.openmatch.Pool parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static dev.openmatch.Pool parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static dev.openmatch.Pool parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static dev.openmatch.Pool parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static dev.openmatch.Pool parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static dev.openmatch.Pool parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static dev.openmatch.Pool parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static dev.openmatch.Pool parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(dev.openmatch.Pool prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Pool specfies a set of criteria that are used to select a subset of Tickets
   * that meet all the criteria.
   * </pre>
   *
   * Protobuf type {@code openmatch.Pool}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:openmatch.Pool)
      dev.openmatch.PoolOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dev.openmatch.MessagesProto.internal_static_openmatch_Pool_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dev.openmatch.MessagesProto.internal_static_openmatch_Pool_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dev.openmatch.Pool.class, dev.openmatch.Pool.Builder.class);
    }

    // Construct using dev.openmatch.Pool.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getDoubleRangeFiltersFieldBuilder();
        getStringEqualsFiltersFieldBuilder();
        getTagPresentFiltersFieldBuilder();
        getCreatedBeforeFieldBuilder();
        getCreatedAfterFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      name_ = "";
      if (doubleRangeFiltersBuilder_ == null) {
        doubleRangeFilters_ = java.util.Collections.emptyList();
      } else {
        doubleRangeFilters_ = null;
        doubleRangeFiltersBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      if (stringEqualsFiltersBuilder_ == null) {
        stringEqualsFilters_ = java.util.Collections.emptyList();
      } else {
        stringEqualsFilters_ = null;
        stringEqualsFiltersBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      if (tagPresentFiltersBuilder_ == null) {
        tagPresentFilters_ = java.util.Collections.emptyList();
      } else {
        tagPresentFilters_ = null;
        tagPresentFiltersBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      createdBefore_ = null;
      if (createdBeforeBuilder_ != null) {
        createdBeforeBuilder_.dispose();
        createdBeforeBuilder_ = null;
      }
      createdAfter_ = null;
      if (createdAfterBuilder_ != null) {
        createdAfterBuilder_.dispose();
        createdAfterBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return dev.openmatch.MessagesProto.internal_static_openmatch_Pool_descriptor;
    }

    @java.lang.Override
    public dev.openmatch.Pool getDefaultInstanceForType() {
      return dev.openmatch.Pool.getDefaultInstance();
    }

    @java.lang.Override
    public dev.openmatch.Pool build() {
      dev.openmatch.Pool result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public dev.openmatch.Pool buildPartial() {
      dev.openmatch.Pool result = new dev.openmatch.Pool(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(dev.openmatch.Pool result) {
      if (doubleRangeFiltersBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          doubleRangeFilters_ = java.util.Collections.unmodifiableList(doubleRangeFilters_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.doubleRangeFilters_ = doubleRangeFilters_;
      } else {
        result.doubleRangeFilters_ = doubleRangeFiltersBuilder_.build();
      }
      if (stringEqualsFiltersBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          stringEqualsFilters_ = java.util.Collections.unmodifiableList(stringEqualsFilters_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.stringEqualsFilters_ = stringEqualsFilters_;
      } else {
        result.stringEqualsFilters_ = stringEqualsFiltersBuilder_.build();
      }
      if (tagPresentFiltersBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          tagPresentFilters_ = java.util.Collections.unmodifiableList(tagPresentFilters_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.tagPresentFilters_ = tagPresentFilters_;
      } else {
        result.tagPresentFilters_ = tagPresentFiltersBuilder_.build();
      }
    }

    private void buildPartial0(dev.openmatch.Pool result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.name_ = name_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.createdBefore_ = createdBeforeBuilder_ == null
            ? createdBefore_
            : createdBeforeBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.createdAfter_ = createdAfterBuilder_ == null
            ? createdAfter_
            : createdAfterBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof dev.openmatch.Pool) {
        return mergeFrom((dev.openmatch.Pool)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(dev.openmatch.Pool other) {
      if (other == dev.openmatch.Pool.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (doubleRangeFiltersBuilder_ == null) {
        if (!other.doubleRangeFilters_.isEmpty()) {
          if (doubleRangeFilters_.isEmpty()) {
            doubleRangeFilters_ = other.doubleRangeFilters_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureDoubleRangeFiltersIsMutable();
            doubleRangeFilters_.addAll(other.doubleRangeFilters_);
          }
          onChanged();
        }
      } else {
        if (!other.doubleRangeFilters_.isEmpty()) {
          if (doubleRangeFiltersBuilder_.isEmpty()) {
            doubleRangeFiltersBuilder_.dispose();
            doubleRangeFiltersBuilder_ = null;
            doubleRangeFilters_ = other.doubleRangeFilters_;
            bitField0_ = (bitField0_ & ~0x00000002);
            doubleRangeFiltersBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getDoubleRangeFiltersFieldBuilder() : null;
          } else {
            doubleRangeFiltersBuilder_.addAllMessages(other.doubleRangeFilters_);
          }
        }
      }
      if (stringEqualsFiltersBuilder_ == null) {
        if (!other.stringEqualsFilters_.isEmpty()) {
          if (stringEqualsFilters_.isEmpty()) {
            stringEqualsFilters_ = other.stringEqualsFilters_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureStringEqualsFiltersIsMutable();
            stringEqualsFilters_.addAll(other.stringEqualsFilters_);
          }
          onChanged();
        }
      } else {
        if (!other.stringEqualsFilters_.isEmpty()) {
          if (stringEqualsFiltersBuilder_.isEmpty()) {
            stringEqualsFiltersBuilder_.dispose();
            stringEqualsFiltersBuilder_ = null;
            stringEqualsFilters_ = other.stringEqualsFilters_;
            bitField0_ = (bitField0_ & ~0x00000004);
            stringEqualsFiltersBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getStringEqualsFiltersFieldBuilder() : null;
          } else {
            stringEqualsFiltersBuilder_.addAllMessages(other.stringEqualsFilters_);
          }
        }
      }
      if (tagPresentFiltersBuilder_ == null) {
        if (!other.tagPresentFilters_.isEmpty()) {
          if (tagPresentFilters_.isEmpty()) {
            tagPresentFilters_ = other.tagPresentFilters_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureTagPresentFiltersIsMutable();
            tagPresentFilters_.addAll(other.tagPresentFilters_);
          }
          onChanged();
        }
      } else {
        if (!other.tagPresentFilters_.isEmpty()) {
          if (tagPresentFiltersBuilder_.isEmpty()) {
            tagPresentFiltersBuilder_.dispose();
            tagPresentFiltersBuilder_ = null;
            tagPresentFilters_ = other.tagPresentFilters_;
            bitField0_ = (bitField0_ & ~0x00000008);
            tagPresentFiltersBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getTagPresentFiltersFieldBuilder() : null;
          } else {
            tagPresentFiltersBuilder_.addAllMessages(other.tagPresentFilters_);
          }
        }
      }
      if (other.hasCreatedBefore()) {
        mergeCreatedBefore(other.getCreatedBefore());
      }
      if (other.hasCreatedAfter()) {
        mergeCreatedAfter(other.getCreatedAfter());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              name_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              dev.openmatch.DoubleRangeFilter m =
                  input.readMessage(
                      dev.openmatch.DoubleRangeFilter.parser(),
                      extensionRegistry);
              if (doubleRangeFiltersBuilder_ == null) {
                ensureDoubleRangeFiltersIsMutable();
                doubleRangeFilters_.add(m);
              } else {
                doubleRangeFiltersBuilder_.addMessage(m);
              }
              break;
            } // case 18
            case 34: {
              dev.openmatch.StringEqualsFilter m =
                  input.readMessage(
                      dev.openmatch.StringEqualsFilter.parser(),
                      extensionRegistry);
              if (stringEqualsFiltersBuilder_ == null) {
                ensureStringEqualsFiltersIsMutable();
                stringEqualsFilters_.add(m);
              } else {
                stringEqualsFiltersBuilder_.addMessage(m);
              }
              break;
            } // case 34
            case 42: {
              dev.openmatch.TagPresentFilter m =
                  input.readMessage(
                      dev.openmatch.TagPresentFilter.parser(),
                      extensionRegistry);
              if (tagPresentFiltersBuilder_ == null) {
                ensureTagPresentFiltersIsMutable();
                tagPresentFilters_.add(m);
              } else {
                tagPresentFiltersBuilder_.addMessage(m);
              }
              break;
            } // case 42
            case 50: {
              input.readMessage(
                  getCreatedBeforeFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000010;
              break;
            } // case 50
            case 58: {
              input.readMessage(
                  getCreatedAfterFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000020;
              break;
            } // case 58
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object name_ = "";
    /**
     * <pre>
     * A developer-chosen human-readable name for this Pool.
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * A developer-chosen human-readable name for this Pool.
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * A developer-chosen human-readable name for this Pool.
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A developer-chosen human-readable name for this Pool.
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      name_ = getDefaultInstance().getName();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A developer-chosen human-readable name for this Pool.
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.util.List<dev.openmatch.DoubleRangeFilter> doubleRangeFilters_ =
      java.util.Collections.emptyList();
    private void ensureDoubleRangeFiltersIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        doubleRangeFilters_ = new java.util.ArrayList<dev.openmatch.DoubleRangeFilter>(doubleRangeFilters_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        dev.openmatch.DoubleRangeFilter, dev.openmatch.DoubleRangeFilter.Builder, dev.openmatch.DoubleRangeFilterOrBuilder> doubleRangeFiltersBuilder_;

    /**
     * <pre>
     * Set of Filters indicating the filtering criteria. Selected tickets must
     * match every Filter.
     * </pre>
     *
     * <code>repeated .openmatch.DoubleRangeFilter double_range_filters = 2 [json_name = "doubleRangeFilters"];</code>
     */
    public java.util.List<dev.openmatch.DoubleRangeFilter> getDoubleRangeFiltersList() {
      if (doubleRangeFiltersBuilder_ == null) {
        return java.util.Collections.unmodifiableList(doubleRangeFilters_);
      } else {
        return doubleRangeFiltersBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Set of Filters indicating the filtering criteria. Selected tickets must
     * match every Filter.
     * </pre>
     *
     * <code>repeated .openmatch.DoubleRangeFilter double_range_filters = 2 [json_name = "doubleRangeFilters"];</code>
     */
    public int getDoubleRangeFiltersCount() {
      if (doubleRangeFiltersBuilder_ == null) {
        return doubleRangeFilters_.size();
      } else {
        return doubleRangeFiltersBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Set of Filters indicating the filtering criteria. Selected tickets must
     * match every Filter.
     * </pre>
     *
     * <code>repeated .openmatch.DoubleRangeFilter double_range_filters = 2 [json_name = "doubleRangeFilters"];</code>
     */
    public dev.openmatch.DoubleRangeFilter getDoubleRangeFilters(int index) {
      if (doubleRangeFiltersBuilder_ == null) {
        return doubleRangeFilters_.get(index);
      } else {
        return doubleRangeFiltersBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Set of Filters indicating the filtering criteria. Selected tickets must
     * match every Filter.
     * </pre>
     *
     * <code>repeated .openmatch.DoubleRangeFilter double_range_filters = 2 [json_name = "doubleRangeFilters"];</code>
     */
    public Builder setDoubleRangeFilters(
        int index, dev.openmatch.DoubleRangeFilter value) {
      if (doubleRangeFiltersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDoubleRangeFiltersIsMutable();
        doubleRangeFilters_.set(index, value);
        onChanged();
      } else {
        doubleRangeFiltersBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Set of Filters indicating the filtering criteria. Selected tickets must
     * match every Filter.
     * </pre>
     *
     * <code>repeated .openmatch.DoubleRangeFilter double_range_filters = 2 [json_name = "doubleRangeFilters"];</code>
     */
    public Builder setDoubleRangeFilters(
        int index, dev.openmatch.DoubleRangeFilter.Builder builderForValue) {
      if (doubleRangeFiltersBuilder_ == null) {
        ensureDoubleRangeFiltersIsMutable();
        doubleRangeFilters_.set(index, builderForValue.build());
        onChanged();
      } else {
        doubleRangeFiltersBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Set of Filters indicating the filtering criteria. Selected tickets must
     * match every Filter.
     * </pre>
     *
     * <code>repeated .openmatch.DoubleRangeFilter double_range_filters = 2 [json_name = "doubleRangeFilters"];</code>
     */
    public Builder addDoubleRangeFilters(dev.openmatch.DoubleRangeFilter value) {
      if (doubleRangeFiltersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDoubleRangeFiltersIsMutable();
        doubleRangeFilters_.add(value);
        onChanged();
      } else {
        doubleRangeFiltersBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Set of Filters indicating the filtering criteria. Selected tickets must
     * match every Filter.
     * </pre>
     *
     * <code>repeated .openmatch.DoubleRangeFilter double_range_filters = 2 [json_name = "doubleRangeFilters"];</code>
     */
    public Builder addDoubleRangeFilters(
        int index, dev.openmatch.DoubleRangeFilter value) {
      if (doubleRangeFiltersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDoubleRangeFiltersIsMutable();
        doubleRangeFilters_.add(index, value);
        onChanged();
      } else {
        doubleRangeFiltersBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Set of Filters indicating the filtering criteria. Selected tickets must
     * match every Filter.
     * </pre>
     *
     * <code>repeated .openmatch.DoubleRangeFilter double_range_filters = 2 [json_name = "doubleRangeFilters"];</code>
     */
    public Builder addDoubleRangeFilters(
        dev.openmatch.DoubleRangeFilter.Builder builderForValue) {
      if (doubleRangeFiltersBuilder_ == null) {
        ensureDoubleRangeFiltersIsMutable();
        doubleRangeFilters_.add(builderForValue.build());
        onChanged();
      } else {
        doubleRangeFiltersBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Set of Filters indicating the filtering criteria. Selected tickets must
     * match every Filter.
     * </pre>
     *
     * <code>repeated .openmatch.DoubleRangeFilter double_range_filters = 2 [json_name = "doubleRangeFilters"];</code>
     */
    public Builder addDoubleRangeFilters(
        int index, dev.openmatch.DoubleRangeFilter.Builder builderForValue) {
      if (doubleRangeFiltersBuilder_ == null) {
        ensureDoubleRangeFiltersIsMutable();
        doubleRangeFilters_.add(index, builderForValue.build());
        onChanged();
      } else {
        doubleRangeFiltersBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Set of Filters indicating the filtering criteria. Selected tickets must
     * match every Filter.
     * </pre>
     *
     * <code>repeated .openmatch.DoubleRangeFilter double_range_filters = 2 [json_name = "doubleRangeFilters"];</code>
     */
    public Builder addAllDoubleRangeFilters(
        java.lang.Iterable<? extends dev.openmatch.DoubleRangeFilter> values) {
      if (doubleRangeFiltersBuilder_ == null) {
        ensureDoubleRangeFiltersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, doubleRangeFilters_);
        onChanged();
      } else {
        doubleRangeFiltersBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Set of Filters indicating the filtering criteria. Selected tickets must
     * match every Filter.
     * </pre>
     *
     * <code>repeated .openmatch.DoubleRangeFilter double_range_filters = 2 [json_name = "doubleRangeFilters"];</code>
     */
    public Builder clearDoubleRangeFilters() {
      if (doubleRangeFiltersBuilder_ == null) {
        doubleRangeFilters_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        doubleRangeFiltersBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Set of Filters indicating the filtering criteria. Selected tickets must
     * match every Filter.
     * </pre>
     *
     * <code>repeated .openmatch.DoubleRangeFilter double_range_filters = 2 [json_name = "doubleRangeFilters"];</code>
     */
    public Builder removeDoubleRangeFilters(int index) {
      if (doubleRangeFiltersBuilder_ == null) {
        ensureDoubleRangeFiltersIsMutable();
        doubleRangeFilters_.remove(index);
        onChanged();
      } else {
        doubleRangeFiltersBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Set of Filters indicating the filtering criteria. Selected tickets must
     * match every Filter.
     * </pre>
     *
     * <code>repeated .openmatch.DoubleRangeFilter double_range_filters = 2 [json_name = "doubleRangeFilters"];</code>
     */
    public dev.openmatch.DoubleRangeFilter.Builder getDoubleRangeFiltersBuilder(
        int index) {
      return getDoubleRangeFiltersFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Set of Filters indicating the filtering criteria. Selected tickets must
     * match every Filter.
     * </pre>
     *
     * <code>repeated .openmatch.DoubleRangeFilter double_range_filters = 2 [json_name = "doubleRangeFilters"];</code>
     */
    public dev.openmatch.DoubleRangeFilterOrBuilder getDoubleRangeFiltersOrBuilder(
        int index) {
      if (doubleRangeFiltersBuilder_ == null) {
        return doubleRangeFilters_.get(index);  } else {
        return doubleRangeFiltersBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Set of Filters indicating the filtering criteria. Selected tickets must
     * match every Filter.
     * </pre>
     *
     * <code>repeated .openmatch.DoubleRangeFilter double_range_filters = 2 [json_name = "doubleRangeFilters"];</code>
     */
    public java.util.List<? extends dev.openmatch.DoubleRangeFilterOrBuilder> 
         getDoubleRangeFiltersOrBuilderList() {
      if (doubleRangeFiltersBuilder_ != null) {
        return doubleRangeFiltersBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(doubleRangeFilters_);
      }
    }
    /**
     * <pre>
     * Set of Filters indicating the filtering criteria. Selected tickets must
     * match every Filter.
     * </pre>
     *
     * <code>repeated .openmatch.DoubleRangeFilter double_range_filters = 2 [json_name = "doubleRangeFilters"];</code>
     */
    public dev.openmatch.DoubleRangeFilter.Builder addDoubleRangeFiltersBuilder() {
      return getDoubleRangeFiltersFieldBuilder().addBuilder(
          dev.openmatch.DoubleRangeFilter.getDefaultInstance());
    }
    /**
     * <pre>
     * Set of Filters indicating the filtering criteria. Selected tickets must
     * match every Filter.
     * </pre>
     *
     * <code>repeated .openmatch.DoubleRangeFilter double_range_filters = 2 [json_name = "doubleRangeFilters"];</code>
     */
    public dev.openmatch.DoubleRangeFilter.Builder addDoubleRangeFiltersBuilder(
        int index) {
      return getDoubleRangeFiltersFieldBuilder().addBuilder(
          index, dev.openmatch.DoubleRangeFilter.getDefaultInstance());
    }
    /**
     * <pre>
     * Set of Filters indicating the filtering criteria. Selected tickets must
     * match every Filter.
     * </pre>
     *
     * <code>repeated .openmatch.DoubleRangeFilter double_range_filters = 2 [json_name = "doubleRangeFilters"];</code>
     */
    public java.util.List<dev.openmatch.DoubleRangeFilter.Builder> 
         getDoubleRangeFiltersBuilderList() {
      return getDoubleRangeFiltersFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        dev.openmatch.DoubleRangeFilter, dev.openmatch.DoubleRangeFilter.Builder, dev.openmatch.DoubleRangeFilterOrBuilder> 
        getDoubleRangeFiltersFieldBuilder() {
      if (doubleRangeFiltersBuilder_ == null) {
        doubleRangeFiltersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            dev.openmatch.DoubleRangeFilter, dev.openmatch.DoubleRangeFilter.Builder, dev.openmatch.DoubleRangeFilterOrBuilder>(
                doubleRangeFilters_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        doubleRangeFilters_ = null;
      }
      return doubleRangeFiltersBuilder_;
    }

    private java.util.List<dev.openmatch.StringEqualsFilter> stringEqualsFilters_ =
      java.util.Collections.emptyList();
    private void ensureStringEqualsFiltersIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        stringEqualsFilters_ = new java.util.ArrayList<dev.openmatch.StringEqualsFilter>(stringEqualsFilters_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        dev.openmatch.StringEqualsFilter, dev.openmatch.StringEqualsFilter.Builder, dev.openmatch.StringEqualsFilterOrBuilder> stringEqualsFiltersBuilder_;

    /**
     * <code>repeated .openmatch.StringEqualsFilter string_equals_filters = 4 [json_name = "stringEqualsFilters"];</code>
     */
    public java.util.List<dev.openmatch.StringEqualsFilter> getStringEqualsFiltersList() {
      if (stringEqualsFiltersBuilder_ == null) {
        return java.util.Collections.unmodifiableList(stringEqualsFilters_);
      } else {
        return stringEqualsFiltersBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .openmatch.StringEqualsFilter string_equals_filters = 4 [json_name = "stringEqualsFilters"];</code>
     */
    public int getStringEqualsFiltersCount() {
      if (stringEqualsFiltersBuilder_ == null) {
        return stringEqualsFilters_.size();
      } else {
        return stringEqualsFiltersBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .openmatch.StringEqualsFilter string_equals_filters = 4 [json_name = "stringEqualsFilters"];</code>
     */
    public dev.openmatch.StringEqualsFilter getStringEqualsFilters(int index) {
      if (stringEqualsFiltersBuilder_ == null) {
        return stringEqualsFilters_.get(index);
      } else {
        return stringEqualsFiltersBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .openmatch.StringEqualsFilter string_equals_filters = 4 [json_name = "stringEqualsFilters"];</code>
     */
    public Builder setStringEqualsFilters(
        int index, dev.openmatch.StringEqualsFilter value) {
      if (stringEqualsFiltersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStringEqualsFiltersIsMutable();
        stringEqualsFilters_.set(index, value);
        onChanged();
      } else {
        stringEqualsFiltersBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .openmatch.StringEqualsFilter string_equals_filters = 4 [json_name = "stringEqualsFilters"];</code>
     */
    public Builder setStringEqualsFilters(
        int index, dev.openmatch.StringEqualsFilter.Builder builderForValue) {
      if (stringEqualsFiltersBuilder_ == null) {
        ensureStringEqualsFiltersIsMutable();
        stringEqualsFilters_.set(index, builderForValue.build());
        onChanged();
      } else {
        stringEqualsFiltersBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .openmatch.StringEqualsFilter string_equals_filters = 4 [json_name = "stringEqualsFilters"];</code>
     */
    public Builder addStringEqualsFilters(dev.openmatch.StringEqualsFilter value) {
      if (stringEqualsFiltersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStringEqualsFiltersIsMutable();
        stringEqualsFilters_.add(value);
        onChanged();
      } else {
        stringEqualsFiltersBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .openmatch.StringEqualsFilter string_equals_filters = 4 [json_name = "stringEqualsFilters"];</code>
     */
    public Builder addStringEqualsFilters(
        int index, dev.openmatch.StringEqualsFilter value) {
      if (stringEqualsFiltersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStringEqualsFiltersIsMutable();
        stringEqualsFilters_.add(index, value);
        onChanged();
      } else {
        stringEqualsFiltersBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .openmatch.StringEqualsFilter string_equals_filters = 4 [json_name = "stringEqualsFilters"];</code>
     */
    public Builder addStringEqualsFilters(
        dev.openmatch.StringEqualsFilter.Builder builderForValue) {
      if (stringEqualsFiltersBuilder_ == null) {
        ensureStringEqualsFiltersIsMutable();
        stringEqualsFilters_.add(builderForValue.build());
        onChanged();
      } else {
        stringEqualsFiltersBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .openmatch.StringEqualsFilter string_equals_filters = 4 [json_name = "stringEqualsFilters"];</code>
     */
    public Builder addStringEqualsFilters(
        int index, dev.openmatch.StringEqualsFilter.Builder builderForValue) {
      if (stringEqualsFiltersBuilder_ == null) {
        ensureStringEqualsFiltersIsMutable();
        stringEqualsFilters_.add(index, builderForValue.build());
        onChanged();
      } else {
        stringEqualsFiltersBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .openmatch.StringEqualsFilter string_equals_filters = 4 [json_name = "stringEqualsFilters"];</code>
     */
    public Builder addAllStringEqualsFilters(
        java.lang.Iterable<? extends dev.openmatch.StringEqualsFilter> values) {
      if (stringEqualsFiltersBuilder_ == null) {
        ensureStringEqualsFiltersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, stringEqualsFilters_);
        onChanged();
      } else {
        stringEqualsFiltersBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .openmatch.StringEqualsFilter string_equals_filters = 4 [json_name = "stringEqualsFilters"];</code>
     */
    public Builder clearStringEqualsFilters() {
      if (stringEqualsFiltersBuilder_ == null) {
        stringEqualsFilters_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        stringEqualsFiltersBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .openmatch.StringEqualsFilter string_equals_filters = 4 [json_name = "stringEqualsFilters"];</code>
     */
    public Builder removeStringEqualsFilters(int index) {
      if (stringEqualsFiltersBuilder_ == null) {
        ensureStringEqualsFiltersIsMutable();
        stringEqualsFilters_.remove(index);
        onChanged();
      } else {
        stringEqualsFiltersBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .openmatch.StringEqualsFilter string_equals_filters = 4 [json_name = "stringEqualsFilters"];</code>
     */
    public dev.openmatch.StringEqualsFilter.Builder getStringEqualsFiltersBuilder(
        int index) {
      return getStringEqualsFiltersFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .openmatch.StringEqualsFilter string_equals_filters = 4 [json_name = "stringEqualsFilters"];</code>
     */
    public dev.openmatch.StringEqualsFilterOrBuilder getStringEqualsFiltersOrBuilder(
        int index) {
      if (stringEqualsFiltersBuilder_ == null) {
        return stringEqualsFilters_.get(index);  } else {
        return stringEqualsFiltersBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .openmatch.StringEqualsFilter string_equals_filters = 4 [json_name = "stringEqualsFilters"];</code>
     */
    public java.util.List<? extends dev.openmatch.StringEqualsFilterOrBuilder> 
         getStringEqualsFiltersOrBuilderList() {
      if (stringEqualsFiltersBuilder_ != null) {
        return stringEqualsFiltersBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(stringEqualsFilters_);
      }
    }
    /**
     * <code>repeated .openmatch.StringEqualsFilter string_equals_filters = 4 [json_name = "stringEqualsFilters"];</code>
     */
    public dev.openmatch.StringEqualsFilter.Builder addStringEqualsFiltersBuilder() {
      return getStringEqualsFiltersFieldBuilder().addBuilder(
          dev.openmatch.StringEqualsFilter.getDefaultInstance());
    }
    /**
     * <code>repeated .openmatch.StringEqualsFilter string_equals_filters = 4 [json_name = "stringEqualsFilters"];</code>
     */
    public dev.openmatch.StringEqualsFilter.Builder addStringEqualsFiltersBuilder(
        int index) {
      return getStringEqualsFiltersFieldBuilder().addBuilder(
          index, dev.openmatch.StringEqualsFilter.getDefaultInstance());
    }
    /**
     * <code>repeated .openmatch.StringEqualsFilter string_equals_filters = 4 [json_name = "stringEqualsFilters"];</code>
     */
    public java.util.List<dev.openmatch.StringEqualsFilter.Builder> 
         getStringEqualsFiltersBuilderList() {
      return getStringEqualsFiltersFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        dev.openmatch.StringEqualsFilter, dev.openmatch.StringEqualsFilter.Builder, dev.openmatch.StringEqualsFilterOrBuilder> 
        getStringEqualsFiltersFieldBuilder() {
      if (stringEqualsFiltersBuilder_ == null) {
        stringEqualsFiltersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            dev.openmatch.StringEqualsFilter, dev.openmatch.StringEqualsFilter.Builder, dev.openmatch.StringEqualsFilterOrBuilder>(
                stringEqualsFilters_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        stringEqualsFilters_ = null;
      }
      return stringEqualsFiltersBuilder_;
    }

    private java.util.List<dev.openmatch.TagPresentFilter> tagPresentFilters_ =
      java.util.Collections.emptyList();
    private void ensureTagPresentFiltersIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        tagPresentFilters_ = new java.util.ArrayList<dev.openmatch.TagPresentFilter>(tagPresentFilters_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        dev.openmatch.TagPresentFilter, dev.openmatch.TagPresentFilter.Builder, dev.openmatch.TagPresentFilterOrBuilder> tagPresentFiltersBuilder_;

    /**
     * <code>repeated .openmatch.TagPresentFilter tag_present_filters = 5 [json_name = "tagPresentFilters"];</code>
     */
    public java.util.List<dev.openmatch.TagPresentFilter> getTagPresentFiltersList() {
      if (tagPresentFiltersBuilder_ == null) {
        return java.util.Collections.unmodifiableList(tagPresentFilters_);
      } else {
        return tagPresentFiltersBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .openmatch.TagPresentFilter tag_present_filters = 5 [json_name = "tagPresentFilters"];</code>
     */
    public int getTagPresentFiltersCount() {
      if (tagPresentFiltersBuilder_ == null) {
        return tagPresentFilters_.size();
      } else {
        return tagPresentFiltersBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .openmatch.TagPresentFilter tag_present_filters = 5 [json_name = "tagPresentFilters"];</code>
     */
    public dev.openmatch.TagPresentFilter getTagPresentFilters(int index) {
      if (tagPresentFiltersBuilder_ == null) {
        return tagPresentFilters_.get(index);
      } else {
        return tagPresentFiltersBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .openmatch.TagPresentFilter tag_present_filters = 5 [json_name = "tagPresentFilters"];</code>
     */
    public Builder setTagPresentFilters(
        int index, dev.openmatch.TagPresentFilter value) {
      if (tagPresentFiltersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTagPresentFiltersIsMutable();
        tagPresentFilters_.set(index, value);
        onChanged();
      } else {
        tagPresentFiltersBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .openmatch.TagPresentFilter tag_present_filters = 5 [json_name = "tagPresentFilters"];</code>
     */
    public Builder setTagPresentFilters(
        int index, dev.openmatch.TagPresentFilter.Builder builderForValue) {
      if (tagPresentFiltersBuilder_ == null) {
        ensureTagPresentFiltersIsMutable();
        tagPresentFilters_.set(index, builderForValue.build());
        onChanged();
      } else {
        tagPresentFiltersBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .openmatch.TagPresentFilter tag_present_filters = 5 [json_name = "tagPresentFilters"];</code>
     */
    public Builder addTagPresentFilters(dev.openmatch.TagPresentFilter value) {
      if (tagPresentFiltersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTagPresentFiltersIsMutable();
        tagPresentFilters_.add(value);
        onChanged();
      } else {
        tagPresentFiltersBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .openmatch.TagPresentFilter tag_present_filters = 5 [json_name = "tagPresentFilters"];</code>
     */
    public Builder addTagPresentFilters(
        int index, dev.openmatch.TagPresentFilter value) {
      if (tagPresentFiltersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTagPresentFiltersIsMutable();
        tagPresentFilters_.add(index, value);
        onChanged();
      } else {
        tagPresentFiltersBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .openmatch.TagPresentFilter tag_present_filters = 5 [json_name = "tagPresentFilters"];</code>
     */
    public Builder addTagPresentFilters(
        dev.openmatch.TagPresentFilter.Builder builderForValue) {
      if (tagPresentFiltersBuilder_ == null) {
        ensureTagPresentFiltersIsMutable();
        tagPresentFilters_.add(builderForValue.build());
        onChanged();
      } else {
        tagPresentFiltersBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .openmatch.TagPresentFilter tag_present_filters = 5 [json_name = "tagPresentFilters"];</code>
     */
    public Builder addTagPresentFilters(
        int index, dev.openmatch.TagPresentFilter.Builder builderForValue) {
      if (tagPresentFiltersBuilder_ == null) {
        ensureTagPresentFiltersIsMutable();
        tagPresentFilters_.add(index, builderForValue.build());
        onChanged();
      } else {
        tagPresentFiltersBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .openmatch.TagPresentFilter tag_present_filters = 5 [json_name = "tagPresentFilters"];</code>
     */
    public Builder addAllTagPresentFilters(
        java.lang.Iterable<? extends dev.openmatch.TagPresentFilter> values) {
      if (tagPresentFiltersBuilder_ == null) {
        ensureTagPresentFiltersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tagPresentFilters_);
        onChanged();
      } else {
        tagPresentFiltersBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .openmatch.TagPresentFilter tag_present_filters = 5 [json_name = "tagPresentFilters"];</code>
     */
    public Builder clearTagPresentFilters() {
      if (tagPresentFiltersBuilder_ == null) {
        tagPresentFilters_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        tagPresentFiltersBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .openmatch.TagPresentFilter tag_present_filters = 5 [json_name = "tagPresentFilters"];</code>
     */
    public Builder removeTagPresentFilters(int index) {
      if (tagPresentFiltersBuilder_ == null) {
        ensureTagPresentFiltersIsMutable();
        tagPresentFilters_.remove(index);
        onChanged();
      } else {
        tagPresentFiltersBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .openmatch.TagPresentFilter tag_present_filters = 5 [json_name = "tagPresentFilters"];</code>
     */
    public dev.openmatch.TagPresentFilter.Builder getTagPresentFiltersBuilder(
        int index) {
      return getTagPresentFiltersFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .openmatch.TagPresentFilter tag_present_filters = 5 [json_name = "tagPresentFilters"];</code>
     */
    public dev.openmatch.TagPresentFilterOrBuilder getTagPresentFiltersOrBuilder(
        int index) {
      if (tagPresentFiltersBuilder_ == null) {
        return tagPresentFilters_.get(index);  } else {
        return tagPresentFiltersBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .openmatch.TagPresentFilter tag_present_filters = 5 [json_name = "tagPresentFilters"];</code>
     */
    public java.util.List<? extends dev.openmatch.TagPresentFilterOrBuilder> 
         getTagPresentFiltersOrBuilderList() {
      if (tagPresentFiltersBuilder_ != null) {
        return tagPresentFiltersBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(tagPresentFilters_);
      }
    }
    /**
     * <code>repeated .openmatch.TagPresentFilter tag_present_filters = 5 [json_name = "tagPresentFilters"];</code>
     */
    public dev.openmatch.TagPresentFilter.Builder addTagPresentFiltersBuilder() {
      return getTagPresentFiltersFieldBuilder().addBuilder(
          dev.openmatch.TagPresentFilter.getDefaultInstance());
    }
    /**
     * <code>repeated .openmatch.TagPresentFilter tag_present_filters = 5 [json_name = "tagPresentFilters"];</code>
     */
    public dev.openmatch.TagPresentFilter.Builder addTagPresentFiltersBuilder(
        int index) {
      return getTagPresentFiltersFieldBuilder().addBuilder(
          index, dev.openmatch.TagPresentFilter.getDefaultInstance());
    }
    /**
     * <code>repeated .openmatch.TagPresentFilter tag_present_filters = 5 [json_name = "tagPresentFilters"];</code>
     */
    public java.util.List<dev.openmatch.TagPresentFilter.Builder> 
         getTagPresentFiltersBuilderList() {
      return getTagPresentFiltersFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        dev.openmatch.TagPresentFilter, dev.openmatch.TagPresentFilter.Builder, dev.openmatch.TagPresentFilterOrBuilder> 
        getTagPresentFiltersFieldBuilder() {
      if (tagPresentFiltersBuilder_ == null) {
        tagPresentFiltersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            dev.openmatch.TagPresentFilter, dev.openmatch.TagPresentFilter.Builder, dev.openmatch.TagPresentFilterOrBuilder>(
                tagPresentFilters_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        tagPresentFilters_ = null;
      }
      return tagPresentFiltersBuilder_;
    }

    private com.google.protobuf.Timestamp createdBefore_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> createdBeforeBuilder_;
    /**
     * <pre>
     * If specified, only Tickets created before the specified time are selected.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created_before = 6 [json_name = "createdBefore"];</code>
     * @return Whether the createdBefore field is set.
     */
    public boolean hasCreatedBefore() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * If specified, only Tickets created before the specified time are selected.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created_before = 6 [json_name = "createdBefore"];</code>
     * @return The createdBefore.
     */
    public com.google.protobuf.Timestamp getCreatedBefore() {
      if (createdBeforeBuilder_ == null) {
        return createdBefore_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : createdBefore_;
      } else {
        return createdBeforeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * If specified, only Tickets created before the specified time are selected.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created_before = 6 [json_name = "createdBefore"];</code>
     */
    public Builder setCreatedBefore(com.google.protobuf.Timestamp value) {
      if (createdBeforeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        createdBefore_ = value;
      } else {
        createdBeforeBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If specified, only Tickets created before the specified time are selected.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created_before = 6 [json_name = "createdBefore"];</code>
     */
    public Builder setCreatedBefore(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      if (createdBeforeBuilder_ == null) {
        createdBefore_ = builderForValue.build();
      } else {
        createdBeforeBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If specified, only Tickets created before the specified time are selected.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created_before = 6 [json_name = "createdBefore"];</code>
     */
    public Builder mergeCreatedBefore(com.google.protobuf.Timestamp value) {
      if (createdBeforeBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0) &&
          createdBefore_ != null &&
          createdBefore_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
          getCreatedBeforeBuilder().mergeFrom(value);
        } else {
          createdBefore_ = value;
        }
      } else {
        createdBeforeBuilder_.mergeFrom(value);
      }
      if (createdBefore_ != null) {
        bitField0_ |= 0x00000010;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * If specified, only Tickets created before the specified time are selected.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created_before = 6 [json_name = "createdBefore"];</code>
     */
    public Builder clearCreatedBefore() {
      bitField0_ = (bitField0_ & ~0x00000010);
      createdBefore_ = null;
      if (createdBeforeBuilder_ != null) {
        createdBeforeBuilder_.dispose();
        createdBeforeBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If specified, only Tickets created before the specified time are selected.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created_before = 6 [json_name = "createdBefore"];</code>
     */
    public com.google.protobuf.Timestamp.Builder getCreatedBeforeBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getCreatedBeforeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * If specified, only Tickets created before the specified time are selected.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created_before = 6 [json_name = "createdBefore"];</code>
     */
    public com.google.protobuf.TimestampOrBuilder getCreatedBeforeOrBuilder() {
      if (createdBeforeBuilder_ != null) {
        return createdBeforeBuilder_.getMessageOrBuilder();
      } else {
        return createdBefore_ == null ?
            com.google.protobuf.Timestamp.getDefaultInstance() : createdBefore_;
      }
    }
    /**
     * <pre>
     * If specified, only Tickets created before the specified time are selected.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created_before = 6 [json_name = "createdBefore"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
        getCreatedBeforeFieldBuilder() {
      if (createdBeforeBuilder_ == null) {
        createdBeforeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                getCreatedBefore(),
                getParentForChildren(),
                isClean());
        createdBefore_ = null;
      }
      return createdBeforeBuilder_;
    }

    private com.google.protobuf.Timestamp createdAfter_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> createdAfterBuilder_;
    /**
     * <pre>
     * If specified, only Tickets created after the specified time are selected.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created_after = 7 [json_name = "createdAfter"];</code>
     * @return Whether the createdAfter field is set.
     */
    public boolean hasCreatedAfter() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * If specified, only Tickets created after the specified time are selected.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created_after = 7 [json_name = "createdAfter"];</code>
     * @return The createdAfter.
     */
    public com.google.protobuf.Timestamp getCreatedAfter() {
      if (createdAfterBuilder_ == null) {
        return createdAfter_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : createdAfter_;
      } else {
        return createdAfterBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * If specified, only Tickets created after the specified time are selected.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created_after = 7 [json_name = "createdAfter"];</code>
     */
    public Builder setCreatedAfter(com.google.protobuf.Timestamp value) {
      if (createdAfterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        createdAfter_ = value;
      } else {
        createdAfterBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If specified, only Tickets created after the specified time are selected.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created_after = 7 [json_name = "createdAfter"];</code>
     */
    public Builder setCreatedAfter(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      if (createdAfterBuilder_ == null) {
        createdAfter_ = builderForValue.build();
      } else {
        createdAfterBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If specified, only Tickets created after the specified time are selected.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created_after = 7 [json_name = "createdAfter"];</code>
     */
    public Builder mergeCreatedAfter(com.google.protobuf.Timestamp value) {
      if (createdAfterBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0) &&
          createdAfter_ != null &&
          createdAfter_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
          getCreatedAfterBuilder().mergeFrom(value);
        } else {
          createdAfter_ = value;
        }
      } else {
        createdAfterBuilder_.mergeFrom(value);
      }
      if (createdAfter_ != null) {
        bitField0_ |= 0x00000020;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * If specified, only Tickets created after the specified time are selected.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created_after = 7 [json_name = "createdAfter"];</code>
     */
    public Builder clearCreatedAfter() {
      bitField0_ = (bitField0_ & ~0x00000020);
      createdAfter_ = null;
      if (createdAfterBuilder_ != null) {
        createdAfterBuilder_.dispose();
        createdAfterBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If specified, only Tickets created after the specified time are selected.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created_after = 7 [json_name = "createdAfter"];</code>
     */
    public com.google.protobuf.Timestamp.Builder getCreatedAfterBuilder() {
      bitField0_ |= 0x00000020;
      onChanged();
      return getCreatedAfterFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * If specified, only Tickets created after the specified time are selected.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created_after = 7 [json_name = "createdAfter"];</code>
     */
    public com.google.protobuf.TimestampOrBuilder getCreatedAfterOrBuilder() {
      if (createdAfterBuilder_ != null) {
        return createdAfterBuilder_.getMessageOrBuilder();
      } else {
        return createdAfter_ == null ?
            com.google.protobuf.Timestamp.getDefaultInstance() : createdAfter_;
      }
    }
    /**
     * <pre>
     * If specified, only Tickets created after the specified time are selected.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created_after = 7 [json_name = "createdAfter"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
        getCreatedAfterFieldBuilder() {
      if (createdAfterBuilder_ == null) {
        createdAfterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                getCreatedAfter(),
                getParentForChildren(),
                isClean());
        createdAfter_ = null;
      }
      return createdAfterBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:openmatch.Pool)
  }

  // @@protoc_insertion_point(class_scope:openmatch.Pool)
  private static final dev.openmatch.Pool DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new dev.openmatch.Pool();
  }

  public static dev.openmatch.Pool getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Pool>
      PARSER = new com.google.protobuf.AbstractParser<Pool>() {
    @java.lang.Override
    public Pool parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Pool> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Pool> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public dev.openmatch.Pool getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

