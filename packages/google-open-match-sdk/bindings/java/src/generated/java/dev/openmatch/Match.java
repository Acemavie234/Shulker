// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/messages.proto

// Protobuf Java Version: 3.25.0
package dev.openmatch;

/**
 * <pre>
 * A Match is used to represent a completed match object. It can be generated by
 * a MatchFunction as a proposal or can be returned by OpenMatch as a result in
 * response to the FetchMatches call.
 * When a match is returned by the FetchMatches call, it should contain at least
 * one ticket to be considered as valid.
 * </pre>
 *
 * Protobuf type {@code openmatch.Match}
 */
public final class Match extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:openmatch.Match)
    MatchOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Match.newBuilder() to construct.
  private Match(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Match() {
    matchId_ = "";
    matchProfile_ = "";
    matchFunction_ = "";
    tickets_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Match();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return dev.openmatch.MessagesProto.internal_static_openmatch_Match_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
      int number) {
    switch (number) {
      case 7:
        return internalGetExtensions();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return dev.openmatch.MessagesProto.internal_static_openmatch_Match_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            dev.openmatch.Match.class, dev.openmatch.Match.Builder.class);
  }

  private int bitField0_;
  public static final int MATCH_ID_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object matchId_ = "";
  /**
   * <pre>
   * A Match ID that should be passed through the stack for tracing.
   * </pre>
   *
   * <code>string match_id = 1 [json_name = "matchId"];</code>
   * @return The matchId.
   */
  @java.lang.Override
  public java.lang.String getMatchId() {
    java.lang.Object ref = matchId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      matchId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * A Match ID that should be passed through the stack for tracing.
   * </pre>
   *
   * <code>string match_id = 1 [json_name = "matchId"];</code>
   * @return The bytes for matchId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getMatchIdBytes() {
    java.lang.Object ref = matchId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      matchId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int MATCH_PROFILE_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object matchProfile_ = "";
  /**
   * <pre>
   * Name of the match profile that generated this Match.
   * </pre>
   *
   * <code>string match_profile = 2 [json_name = "matchProfile"];</code>
   * @return The matchProfile.
   */
  @java.lang.Override
  public java.lang.String getMatchProfile() {
    java.lang.Object ref = matchProfile_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      matchProfile_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Name of the match profile that generated this Match.
   * </pre>
   *
   * <code>string match_profile = 2 [json_name = "matchProfile"];</code>
   * @return The bytes for matchProfile.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getMatchProfileBytes() {
    java.lang.Object ref = matchProfile_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      matchProfile_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int MATCH_FUNCTION_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private volatile java.lang.Object matchFunction_ = "";
  /**
   * <pre>
   * Name of the match function that generated this Match.
   * </pre>
   *
   * <code>string match_function = 3 [json_name = "matchFunction"];</code>
   * @return The matchFunction.
   */
  @java.lang.Override
  public java.lang.String getMatchFunction() {
    java.lang.Object ref = matchFunction_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      matchFunction_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Name of the match function that generated this Match.
   * </pre>
   *
   * <code>string match_function = 3 [json_name = "matchFunction"];</code>
   * @return The bytes for matchFunction.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getMatchFunctionBytes() {
    java.lang.Object ref = matchFunction_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      matchFunction_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TICKETS_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private java.util.List<dev.openmatch.Ticket> tickets_;
  /**
   * <pre>
   * Tickets belonging to this match.
   * </pre>
   *
   * <code>repeated .openmatch.Ticket tickets = 4 [json_name = "tickets"];</code>
   */
  @java.lang.Override
  public java.util.List<dev.openmatch.Ticket> getTicketsList() {
    return tickets_;
  }
  /**
   * <pre>
   * Tickets belonging to this match.
   * </pre>
   *
   * <code>repeated .openmatch.Ticket tickets = 4 [json_name = "tickets"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends dev.openmatch.TicketOrBuilder> 
      getTicketsOrBuilderList() {
    return tickets_;
  }
  /**
   * <pre>
   * Tickets belonging to this match.
   * </pre>
   *
   * <code>repeated .openmatch.Ticket tickets = 4 [json_name = "tickets"];</code>
   */
  @java.lang.Override
  public int getTicketsCount() {
    return tickets_.size();
  }
  /**
   * <pre>
   * Tickets belonging to this match.
   * </pre>
   *
   * <code>repeated .openmatch.Ticket tickets = 4 [json_name = "tickets"];</code>
   */
  @java.lang.Override
  public dev.openmatch.Ticket getTickets(int index) {
    return tickets_.get(index);
  }
  /**
   * <pre>
   * Tickets belonging to this match.
   * </pre>
   *
   * <code>repeated .openmatch.Ticket tickets = 4 [json_name = "tickets"];</code>
   */
  @java.lang.Override
  public dev.openmatch.TicketOrBuilder getTicketsOrBuilder(
      int index) {
    return tickets_.get(index);
  }

  public static final int EXTENSIONS_FIELD_NUMBER = 7;
  private static final class ExtensionsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, com.google.protobuf.Any> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, com.google.protobuf.Any>newDefaultInstance(
                dev.openmatch.MessagesProto.internal_static_openmatch_Match_ExtensionsEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                com.google.protobuf.Any.getDefaultInstance());
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      java.lang.String, com.google.protobuf.Any> extensions_;
  private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.Any>
  internalGetExtensions() {
    if (extensions_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          ExtensionsDefaultEntryHolder.defaultEntry);
    }
    return extensions_;
  }
  public int getExtensionsCount() {
    return internalGetExtensions().getMap().size();
  }
  /**
   * <pre>
   * Customized information not inspected by Open Match, to be used by the match
   * making function, evaluator, and components making calls to Open Match.
   * Optional, depending on the requirements of the connected systems.
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.Any&gt; extensions = 7 [json_name = "extensions"];</code>
   */
  @java.lang.Override
  public boolean containsExtensions(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetExtensions().getMap().containsKey(key);
  }
  /**
   * Use {@link #getExtensionsMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, com.google.protobuf.Any> getExtensions() {
    return getExtensionsMap();
  }
  /**
   * <pre>
   * Customized information not inspected by Open Match, to be used by the match
   * making function, evaluator, and components making calls to Open Match.
   * Optional, depending on the requirements of the connected systems.
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.Any&gt; extensions = 7 [json_name = "extensions"];</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, com.google.protobuf.Any> getExtensionsMap() {
    return internalGetExtensions().getMap();
  }
  /**
   * <pre>
   * Customized information not inspected by Open Match, to be used by the match
   * making function, evaluator, and components making calls to Open Match.
   * Optional, depending on the requirements of the connected systems.
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.Any&gt; extensions = 7 [json_name = "extensions"];</code>
   */
  @java.lang.Override
  public /* nullable */
com.google.protobuf.Any getExtensionsOrDefault(
      java.lang.String key,
      /* nullable */
com.google.protobuf.Any defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, com.google.protobuf.Any> map =
        internalGetExtensions().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Customized information not inspected by Open Match, to be used by the match
   * making function, evaluator, and components making calls to Open Match.
   * Optional, depending on the requirements of the connected systems.
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.Any&gt; extensions = 7 [json_name = "extensions"];</code>
   */
  @java.lang.Override
  public com.google.protobuf.Any getExtensionsOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, com.google.protobuf.Any> map =
        internalGetExtensions().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int BACKFILL_FIELD_NUMBER = 8;
  private dev.openmatch.Backfill backfill_;
  /**
   * <pre>
   * Backfill request which contains additional information to the match
   * and contains an association to a GameServer.
   * BETA FEATURE WARNING: This field is not finalized and still subject
   * to possible change or removal.
   * </pre>
   *
   * <code>.openmatch.Backfill backfill = 8 [json_name = "backfill"];</code>
   * @return Whether the backfill field is set.
   */
  @java.lang.Override
  public boolean hasBackfill() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Backfill request which contains additional information to the match
   * and contains an association to a GameServer.
   * BETA FEATURE WARNING: This field is not finalized and still subject
   * to possible change or removal.
   * </pre>
   *
   * <code>.openmatch.Backfill backfill = 8 [json_name = "backfill"];</code>
   * @return The backfill.
   */
  @java.lang.Override
  public dev.openmatch.Backfill getBackfill() {
    return backfill_ == null ? dev.openmatch.Backfill.getDefaultInstance() : backfill_;
  }
  /**
   * <pre>
   * Backfill request which contains additional information to the match
   * and contains an association to a GameServer.
   * BETA FEATURE WARNING: This field is not finalized and still subject
   * to possible change or removal.
   * </pre>
   *
   * <code>.openmatch.Backfill backfill = 8 [json_name = "backfill"];</code>
   */
  @java.lang.Override
  public dev.openmatch.BackfillOrBuilder getBackfillOrBuilder() {
    return backfill_ == null ? dev.openmatch.Backfill.getDefaultInstance() : backfill_;
  }

  public static final int ALLOCATE_GAMESERVER_FIELD_NUMBER = 9;
  private boolean allocateGameserver_ = false;
  /**
   * <pre>
   * AllocateGameServer signalise Director that Backfill is new and it should 
   * allocate a GameServer, this Backfill would be assigned.
   * BETA FEATURE WARNING: This field is not finalized and still subject
   * to possible change or removal.
   * </pre>
   *
   * <code>bool allocate_gameserver = 9 [json_name = "allocateGameserver"];</code>
   * @return The allocateGameserver.
   */
  @java.lang.Override
  public boolean getAllocateGameserver() {
    return allocateGameserver_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(matchId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, matchId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(matchProfile_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, matchProfile_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(matchFunction_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, matchFunction_);
    }
    for (int i = 0; i < tickets_.size(); i++) {
      output.writeMessage(4, tickets_.get(i));
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetExtensions(),
        ExtensionsDefaultEntryHolder.defaultEntry,
        7);
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(8, getBackfill());
    }
    if (allocateGameserver_ != false) {
      output.writeBool(9, allocateGameserver_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(matchId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, matchId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(matchProfile_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, matchProfile_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(matchFunction_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, matchFunction_);
    }
    for (int i = 0; i < tickets_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, tickets_.get(i));
    }
    for (java.util.Map.Entry<java.lang.String, com.google.protobuf.Any> entry
         : internalGetExtensions().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.Any>
      extensions__ = ExtensionsDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, extensions__);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, getBackfill());
    }
    if (allocateGameserver_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(9, allocateGameserver_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof dev.openmatch.Match)) {
      return super.equals(obj);
    }
    dev.openmatch.Match other = (dev.openmatch.Match) obj;

    if (!getMatchId()
        .equals(other.getMatchId())) return false;
    if (!getMatchProfile()
        .equals(other.getMatchProfile())) return false;
    if (!getMatchFunction()
        .equals(other.getMatchFunction())) return false;
    if (!getTicketsList()
        .equals(other.getTicketsList())) return false;
    if (!internalGetExtensions().equals(
        other.internalGetExtensions())) return false;
    if (hasBackfill() != other.hasBackfill()) return false;
    if (hasBackfill()) {
      if (!getBackfill()
          .equals(other.getBackfill())) return false;
    }
    if (getAllocateGameserver()
        != other.getAllocateGameserver()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + MATCH_ID_FIELD_NUMBER;
    hash = (53 * hash) + getMatchId().hashCode();
    hash = (37 * hash) + MATCH_PROFILE_FIELD_NUMBER;
    hash = (53 * hash) + getMatchProfile().hashCode();
    hash = (37 * hash) + MATCH_FUNCTION_FIELD_NUMBER;
    hash = (53 * hash) + getMatchFunction().hashCode();
    if (getTicketsCount() > 0) {
      hash = (37 * hash) + TICKETS_FIELD_NUMBER;
      hash = (53 * hash) + getTicketsList().hashCode();
    }
    if (!internalGetExtensions().getMap().isEmpty()) {
      hash = (37 * hash) + EXTENSIONS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetExtensions().hashCode();
    }
    if (hasBackfill()) {
      hash = (37 * hash) + BACKFILL_FIELD_NUMBER;
      hash = (53 * hash) + getBackfill().hashCode();
    }
    hash = (37 * hash) + ALLOCATE_GAMESERVER_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getAllocateGameserver());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static dev.openmatch.Match parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static dev.openmatch.Match parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static dev.openmatch.Match parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static dev.openmatch.Match parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static dev.openmatch.Match parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static dev.openmatch.Match parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static dev.openmatch.Match parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static dev.openmatch.Match parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static dev.openmatch.Match parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static dev.openmatch.Match parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static dev.openmatch.Match parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static dev.openmatch.Match parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(dev.openmatch.Match prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A Match is used to represent a completed match object. It can be generated by
   * a MatchFunction as a proposal or can be returned by OpenMatch as a result in
   * response to the FetchMatches call.
   * When a match is returned by the FetchMatches call, it should contain at least
   * one ticket to be considered as valid.
   * </pre>
   *
   * Protobuf type {@code openmatch.Match}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:openmatch.Match)
      dev.openmatch.MatchOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dev.openmatch.MessagesProto.internal_static_openmatch_Match_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
        int number) {
      switch (number) {
        case 7:
          return internalGetExtensions();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMutableMapFieldReflection(
        int number) {
      switch (number) {
        case 7:
          return internalGetMutableExtensions();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dev.openmatch.MessagesProto.internal_static_openmatch_Match_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dev.openmatch.Match.class, dev.openmatch.Match.Builder.class);
    }

    // Construct using dev.openmatch.Match.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getTicketsFieldBuilder();
        getBackfillFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      matchId_ = "";
      matchProfile_ = "";
      matchFunction_ = "";
      if (ticketsBuilder_ == null) {
        tickets_ = java.util.Collections.emptyList();
      } else {
        tickets_ = null;
        ticketsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      internalGetMutableExtensions().clear();
      backfill_ = null;
      if (backfillBuilder_ != null) {
        backfillBuilder_.dispose();
        backfillBuilder_ = null;
      }
      allocateGameserver_ = false;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return dev.openmatch.MessagesProto.internal_static_openmatch_Match_descriptor;
    }

    @java.lang.Override
    public dev.openmatch.Match getDefaultInstanceForType() {
      return dev.openmatch.Match.getDefaultInstance();
    }

    @java.lang.Override
    public dev.openmatch.Match build() {
      dev.openmatch.Match result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public dev.openmatch.Match buildPartial() {
      dev.openmatch.Match result = new dev.openmatch.Match(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(dev.openmatch.Match result) {
      if (ticketsBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          tickets_ = java.util.Collections.unmodifiableList(tickets_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.tickets_ = tickets_;
      } else {
        result.tickets_ = ticketsBuilder_.build();
      }
    }

    private void buildPartial0(dev.openmatch.Match result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.matchId_ = matchId_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.matchProfile_ = matchProfile_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.matchFunction_ = matchFunction_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.extensions_ = internalGetExtensions().build(ExtensionsDefaultEntryHolder.defaultEntry);
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.backfill_ = backfillBuilder_ == null
            ? backfill_
            : backfillBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.allocateGameserver_ = allocateGameserver_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof dev.openmatch.Match) {
        return mergeFrom((dev.openmatch.Match)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(dev.openmatch.Match other) {
      if (other == dev.openmatch.Match.getDefaultInstance()) return this;
      if (!other.getMatchId().isEmpty()) {
        matchId_ = other.matchId_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getMatchProfile().isEmpty()) {
        matchProfile_ = other.matchProfile_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (!other.getMatchFunction().isEmpty()) {
        matchFunction_ = other.matchFunction_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (ticketsBuilder_ == null) {
        if (!other.tickets_.isEmpty()) {
          if (tickets_.isEmpty()) {
            tickets_ = other.tickets_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureTicketsIsMutable();
            tickets_.addAll(other.tickets_);
          }
          onChanged();
        }
      } else {
        if (!other.tickets_.isEmpty()) {
          if (ticketsBuilder_.isEmpty()) {
            ticketsBuilder_.dispose();
            ticketsBuilder_ = null;
            tickets_ = other.tickets_;
            bitField0_ = (bitField0_ & ~0x00000008);
            ticketsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getTicketsFieldBuilder() : null;
          } else {
            ticketsBuilder_.addAllMessages(other.tickets_);
          }
        }
      }
      internalGetMutableExtensions().mergeFrom(
          other.internalGetExtensions());
      bitField0_ |= 0x00000010;
      if (other.hasBackfill()) {
        mergeBackfill(other.getBackfill());
      }
      if (other.getAllocateGameserver() != false) {
        setAllocateGameserver(other.getAllocateGameserver());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              matchId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              matchProfile_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              matchFunction_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              dev.openmatch.Ticket m =
                  input.readMessage(
                      dev.openmatch.Ticket.parser(),
                      extensionRegistry);
              if (ticketsBuilder_ == null) {
                ensureTicketsIsMutable();
                tickets_.add(m);
              } else {
                ticketsBuilder_.addMessage(m);
              }
              break;
            } // case 34
            case 58: {
              com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.Any>
              extensions__ = input.readMessage(
                  ExtensionsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableExtensions().ensureBuilderMap().put(
                  extensions__.getKey(), extensions__.getValue());
              bitField0_ |= 0x00000010;
              break;
            } // case 58
            case 66: {
              input.readMessage(
                  getBackfillFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000020;
              break;
            } // case 66
            case 72: {
              allocateGameserver_ = input.readBool();
              bitField0_ |= 0x00000040;
              break;
            } // case 72
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object matchId_ = "";
    /**
     * <pre>
     * A Match ID that should be passed through the stack for tracing.
     * </pre>
     *
     * <code>string match_id = 1 [json_name = "matchId"];</code>
     * @return The matchId.
     */
    public java.lang.String getMatchId() {
      java.lang.Object ref = matchId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        matchId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * A Match ID that should be passed through the stack for tracing.
     * </pre>
     *
     * <code>string match_id = 1 [json_name = "matchId"];</code>
     * @return The bytes for matchId.
     */
    public com.google.protobuf.ByteString
        getMatchIdBytes() {
      java.lang.Object ref = matchId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        matchId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * A Match ID that should be passed through the stack for tracing.
     * </pre>
     *
     * <code>string match_id = 1 [json_name = "matchId"];</code>
     * @param value The matchId to set.
     * @return This builder for chaining.
     */
    public Builder setMatchId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      matchId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A Match ID that should be passed through the stack for tracing.
     * </pre>
     *
     * <code>string match_id = 1 [json_name = "matchId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMatchId() {
      matchId_ = getDefaultInstance().getMatchId();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A Match ID that should be passed through the stack for tracing.
     * </pre>
     *
     * <code>string match_id = 1 [json_name = "matchId"];</code>
     * @param value The bytes for matchId to set.
     * @return This builder for chaining.
     */
    public Builder setMatchIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      matchId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object matchProfile_ = "";
    /**
     * <pre>
     * Name of the match profile that generated this Match.
     * </pre>
     *
     * <code>string match_profile = 2 [json_name = "matchProfile"];</code>
     * @return The matchProfile.
     */
    public java.lang.String getMatchProfile() {
      java.lang.Object ref = matchProfile_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        matchProfile_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Name of the match profile that generated this Match.
     * </pre>
     *
     * <code>string match_profile = 2 [json_name = "matchProfile"];</code>
     * @return The bytes for matchProfile.
     */
    public com.google.protobuf.ByteString
        getMatchProfileBytes() {
      java.lang.Object ref = matchProfile_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        matchProfile_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Name of the match profile that generated this Match.
     * </pre>
     *
     * <code>string match_profile = 2 [json_name = "matchProfile"];</code>
     * @param value The matchProfile to set.
     * @return This builder for chaining.
     */
    public Builder setMatchProfile(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      matchProfile_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Name of the match profile that generated this Match.
     * </pre>
     *
     * <code>string match_profile = 2 [json_name = "matchProfile"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMatchProfile() {
      matchProfile_ = getDefaultInstance().getMatchProfile();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Name of the match profile that generated this Match.
     * </pre>
     *
     * <code>string match_profile = 2 [json_name = "matchProfile"];</code>
     * @param value The bytes for matchProfile to set.
     * @return This builder for chaining.
     */
    public Builder setMatchProfileBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      matchProfile_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private java.lang.Object matchFunction_ = "";
    /**
     * <pre>
     * Name of the match function that generated this Match.
     * </pre>
     *
     * <code>string match_function = 3 [json_name = "matchFunction"];</code>
     * @return The matchFunction.
     */
    public java.lang.String getMatchFunction() {
      java.lang.Object ref = matchFunction_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        matchFunction_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Name of the match function that generated this Match.
     * </pre>
     *
     * <code>string match_function = 3 [json_name = "matchFunction"];</code>
     * @return The bytes for matchFunction.
     */
    public com.google.protobuf.ByteString
        getMatchFunctionBytes() {
      java.lang.Object ref = matchFunction_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        matchFunction_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Name of the match function that generated this Match.
     * </pre>
     *
     * <code>string match_function = 3 [json_name = "matchFunction"];</code>
     * @param value The matchFunction to set.
     * @return This builder for chaining.
     */
    public Builder setMatchFunction(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      matchFunction_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Name of the match function that generated this Match.
     * </pre>
     *
     * <code>string match_function = 3 [json_name = "matchFunction"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMatchFunction() {
      matchFunction_ = getDefaultInstance().getMatchFunction();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Name of the match function that generated this Match.
     * </pre>
     *
     * <code>string match_function = 3 [json_name = "matchFunction"];</code>
     * @param value The bytes for matchFunction to set.
     * @return This builder for chaining.
     */
    public Builder setMatchFunctionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      matchFunction_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private java.util.List<dev.openmatch.Ticket> tickets_ =
      java.util.Collections.emptyList();
    private void ensureTicketsIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        tickets_ = new java.util.ArrayList<dev.openmatch.Ticket>(tickets_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        dev.openmatch.Ticket, dev.openmatch.Ticket.Builder, dev.openmatch.TicketOrBuilder> ticketsBuilder_;

    /**
     * <pre>
     * Tickets belonging to this match.
     * </pre>
     *
     * <code>repeated .openmatch.Ticket tickets = 4 [json_name = "tickets"];</code>
     */
    public java.util.List<dev.openmatch.Ticket> getTicketsList() {
      if (ticketsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(tickets_);
      } else {
        return ticketsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Tickets belonging to this match.
     * </pre>
     *
     * <code>repeated .openmatch.Ticket tickets = 4 [json_name = "tickets"];</code>
     */
    public int getTicketsCount() {
      if (ticketsBuilder_ == null) {
        return tickets_.size();
      } else {
        return ticketsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Tickets belonging to this match.
     * </pre>
     *
     * <code>repeated .openmatch.Ticket tickets = 4 [json_name = "tickets"];</code>
     */
    public dev.openmatch.Ticket getTickets(int index) {
      if (ticketsBuilder_ == null) {
        return tickets_.get(index);
      } else {
        return ticketsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Tickets belonging to this match.
     * </pre>
     *
     * <code>repeated .openmatch.Ticket tickets = 4 [json_name = "tickets"];</code>
     */
    public Builder setTickets(
        int index, dev.openmatch.Ticket value) {
      if (ticketsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTicketsIsMutable();
        tickets_.set(index, value);
        onChanged();
      } else {
        ticketsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Tickets belonging to this match.
     * </pre>
     *
     * <code>repeated .openmatch.Ticket tickets = 4 [json_name = "tickets"];</code>
     */
    public Builder setTickets(
        int index, dev.openmatch.Ticket.Builder builderForValue) {
      if (ticketsBuilder_ == null) {
        ensureTicketsIsMutable();
        tickets_.set(index, builderForValue.build());
        onChanged();
      } else {
        ticketsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Tickets belonging to this match.
     * </pre>
     *
     * <code>repeated .openmatch.Ticket tickets = 4 [json_name = "tickets"];</code>
     */
    public Builder addTickets(dev.openmatch.Ticket value) {
      if (ticketsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTicketsIsMutable();
        tickets_.add(value);
        onChanged();
      } else {
        ticketsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Tickets belonging to this match.
     * </pre>
     *
     * <code>repeated .openmatch.Ticket tickets = 4 [json_name = "tickets"];</code>
     */
    public Builder addTickets(
        int index, dev.openmatch.Ticket value) {
      if (ticketsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTicketsIsMutable();
        tickets_.add(index, value);
        onChanged();
      } else {
        ticketsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Tickets belonging to this match.
     * </pre>
     *
     * <code>repeated .openmatch.Ticket tickets = 4 [json_name = "tickets"];</code>
     */
    public Builder addTickets(
        dev.openmatch.Ticket.Builder builderForValue) {
      if (ticketsBuilder_ == null) {
        ensureTicketsIsMutable();
        tickets_.add(builderForValue.build());
        onChanged();
      } else {
        ticketsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Tickets belonging to this match.
     * </pre>
     *
     * <code>repeated .openmatch.Ticket tickets = 4 [json_name = "tickets"];</code>
     */
    public Builder addTickets(
        int index, dev.openmatch.Ticket.Builder builderForValue) {
      if (ticketsBuilder_ == null) {
        ensureTicketsIsMutable();
        tickets_.add(index, builderForValue.build());
        onChanged();
      } else {
        ticketsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Tickets belonging to this match.
     * </pre>
     *
     * <code>repeated .openmatch.Ticket tickets = 4 [json_name = "tickets"];</code>
     */
    public Builder addAllTickets(
        java.lang.Iterable<? extends dev.openmatch.Ticket> values) {
      if (ticketsBuilder_ == null) {
        ensureTicketsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tickets_);
        onChanged();
      } else {
        ticketsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Tickets belonging to this match.
     * </pre>
     *
     * <code>repeated .openmatch.Ticket tickets = 4 [json_name = "tickets"];</code>
     */
    public Builder clearTickets() {
      if (ticketsBuilder_ == null) {
        tickets_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        ticketsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Tickets belonging to this match.
     * </pre>
     *
     * <code>repeated .openmatch.Ticket tickets = 4 [json_name = "tickets"];</code>
     */
    public Builder removeTickets(int index) {
      if (ticketsBuilder_ == null) {
        ensureTicketsIsMutable();
        tickets_.remove(index);
        onChanged();
      } else {
        ticketsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Tickets belonging to this match.
     * </pre>
     *
     * <code>repeated .openmatch.Ticket tickets = 4 [json_name = "tickets"];</code>
     */
    public dev.openmatch.Ticket.Builder getTicketsBuilder(
        int index) {
      return getTicketsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Tickets belonging to this match.
     * </pre>
     *
     * <code>repeated .openmatch.Ticket tickets = 4 [json_name = "tickets"];</code>
     */
    public dev.openmatch.TicketOrBuilder getTicketsOrBuilder(
        int index) {
      if (ticketsBuilder_ == null) {
        return tickets_.get(index);  } else {
        return ticketsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Tickets belonging to this match.
     * </pre>
     *
     * <code>repeated .openmatch.Ticket tickets = 4 [json_name = "tickets"];</code>
     */
    public java.util.List<? extends dev.openmatch.TicketOrBuilder> 
         getTicketsOrBuilderList() {
      if (ticketsBuilder_ != null) {
        return ticketsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(tickets_);
      }
    }
    /**
     * <pre>
     * Tickets belonging to this match.
     * </pre>
     *
     * <code>repeated .openmatch.Ticket tickets = 4 [json_name = "tickets"];</code>
     */
    public dev.openmatch.Ticket.Builder addTicketsBuilder() {
      return getTicketsFieldBuilder().addBuilder(
          dev.openmatch.Ticket.getDefaultInstance());
    }
    /**
     * <pre>
     * Tickets belonging to this match.
     * </pre>
     *
     * <code>repeated .openmatch.Ticket tickets = 4 [json_name = "tickets"];</code>
     */
    public dev.openmatch.Ticket.Builder addTicketsBuilder(
        int index) {
      return getTicketsFieldBuilder().addBuilder(
          index, dev.openmatch.Ticket.getDefaultInstance());
    }
    /**
     * <pre>
     * Tickets belonging to this match.
     * </pre>
     *
     * <code>repeated .openmatch.Ticket tickets = 4 [json_name = "tickets"];</code>
     */
    public java.util.List<dev.openmatch.Ticket.Builder> 
         getTicketsBuilderList() {
      return getTicketsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        dev.openmatch.Ticket, dev.openmatch.Ticket.Builder, dev.openmatch.TicketOrBuilder> 
        getTicketsFieldBuilder() {
      if (ticketsBuilder_ == null) {
        ticketsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            dev.openmatch.Ticket, dev.openmatch.Ticket.Builder, dev.openmatch.TicketOrBuilder>(
                tickets_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        tickets_ = null;
      }
      return ticketsBuilder_;
    }

    private static final class ExtensionsConverter implements com.google.protobuf.MapFieldBuilder.Converter<java.lang.String, com.google.protobuf.AnyOrBuilder, com.google.protobuf.Any> {
      @java.lang.Override
      public com.google.protobuf.Any build(com.google.protobuf.AnyOrBuilder val) {
        if (val instanceof com.google.protobuf.Any) { return (com.google.protobuf.Any) val; }
        return ((com.google.protobuf.Any.Builder) val).build();
      }

      @java.lang.Override
      public com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.Any> defaultEntry() {
        return ExtensionsDefaultEntryHolder.defaultEntry;
      }
    };
    private static final ExtensionsConverter extensionsConverter = new ExtensionsConverter();

    private com.google.protobuf.MapFieldBuilder<
        java.lang.String, com.google.protobuf.AnyOrBuilder, com.google.protobuf.Any, com.google.protobuf.Any.Builder> extensions_;
    private com.google.protobuf.MapFieldBuilder<java.lang.String, com.google.protobuf.AnyOrBuilder, com.google.protobuf.Any, com.google.protobuf.Any.Builder>
        internalGetExtensions() {
      if (extensions_ == null) {
        return new com.google.protobuf.MapFieldBuilder<>(extensionsConverter);
      }
      return extensions_;
    }
    private com.google.protobuf.MapFieldBuilder<java.lang.String, com.google.protobuf.AnyOrBuilder, com.google.protobuf.Any, com.google.protobuf.Any.Builder>
        internalGetMutableExtensions() {
      if (extensions_ == null) {
        extensions_ = new com.google.protobuf.MapFieldBuilder<>(extensionsConverter);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return extensions_;
    }
    public int getExtensionsCount() {
      return internalGetExtensions().ensureBuilderMap().size();
    }
    /**
     * <pre>
     * Customized information not inspected by Open Match, to be used by the match
     * making function, evaluator, and components making calls to Open Match.
     * Optional, depending on the requirements of the connected systems.
     * </pre>
     *
     * <code>map&lt;string, .google.protobuf.Any&gt; extensions = 7 [json_name = "extensions"];</code>
     */
    @java.lang.Override
    public boolean containsExtensions(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetExtensions().ensureBuilderMap().containsKey(key);
    }
    /**
     * Use {@link #getExtensionsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.protobuf.Any> getExtensions() {
      return getExtensionsMap();
    }
    /**
     * <pre>
     * Customized information not inspected by Open Match, to be used by the match
     * making function, evaluator, and components making calls to Open Match.
     * Optional, depending on the requirements of the connected systems.
     * </pre>
     *
     * <code>map&lt;string, .google.protobuf.Any&gt; extensions = 7 [json_name = "extensions"];</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, com.google.protobuf.Any> getExtensionsMap() {
      return internalGetExtensions().getImmutableMap();
    }
    /**
     * <pre>
     * Customized information not inspected by Open Match, to be used by the match
     * making function, evaluator, and components making calls to Open Match.
     * Optional, depending on the requirements of the connected systems.
     * </pre>
     *
     * <code>map&lt;string, .google.protobuf.Any&gt; extensions = 7 [json_name = "extensions"];</code>
     */
    @java.lang.Override
    public /* nullable */
com.google.protobuf.Any getExtensionsOrDefault(
        java.lang.String key,
        /* nullable */
com.google.protobuf.Any defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, com.google.protobuf.AnyOrBuilder> map = internalGetMutableExtensions().ensureBuilderMap();
      return map.containsKey(key) ? extensionsConverter.build(map.get(key)) : defaultValue;
    }
    /**
     * <pre>
     * Customized information not inspected by Open Match, to be used by the match
     * making function, evaluator, and components making calls to Open Match.
     * Optional, depending on the requirements of the connected systems.
     * </pre>
     *
     * <code>map&lt;string, .google.protobuf.Any&gt; extensions = 7 [json_name = "extensions"];</code>
     */
    @java.lang.Override
    public com.google.protobuf.Any getExtensionsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, com.google.protobuf.AnyOrBuilder> map = internalGetMutableExtensions().ensureBuilderMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return extensionsConverter.build(map.get(key));
    }
    public Builder clearExtensions() {
      bitField0_ = (bitField0_ & ~0x00000010);
      internalGetMutableExtensions().clear();
      return this;
    }
    /**
     * <pre>
     * Customized information not inspected by Open Match, to be used by the match
     * making function, evaluator, and components making calls to Open Match.
     * Optional, depending on the requirements of the connected systems.
     * </pre>
     *
     * <code>map&lt;string, .google.protobuf.Any&gt; extensions = 7 [json_name = "extensions"];</code>
     */
    public Builder removeExtensions(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableExtensions().ensureBuilderMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.protobuf.Any>
        getMutableExtensions() {
      bitField0_ |= 0x00000010;
      return internalGetMutableExtensions().ensureMessageMap();
    }
    /**
     * <pre>
     * Customized information not inspected by Open Match, to be used by the match
     * making function, evaluator, and components making calls to Open Match.
     * Optional, depending on the requirements of the connected systems.
     * </pre>
     *
     * <code>map&lt;string, .google.protobuf.Any&gt; extensions = 7 [json_name = "extensions"];</code>
     */
    public Builder putExtensions(
        java.lang.String key,
        com.google.protobuf.Any value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) { throw new NullPointerException("map value"); }
      internalGetMutableExtensions().ensureBuilderMap()
          .put(key, value);
      bitField0_ |= 0x00000010;
      return this;
    }
    /**
     * <pre>
     * Customized information not inspected by Open Match, to be used by the match
     * making function, evaluator, and components making calls to Open Match.
     * Optional, depending on the requirements of the connected systems.
     * </pre>
     *
     * <code>map&lt;string, .google.protobuf.Any&gt; extensions = 7 [json_name = "extensions"];</code>
     */
    public Builder putAllExtensions(
        java.util.Map<java.lang.String, com.google.protobuf.Any> values) {
      for (java.util.Map.Entry<java.lang.String, com.google.protobuf.Any> e : values.entrySet()) {
        if (e.getKey() == null || e.getValue() == null) {
          throw new NullPointerException();
        }
      }
      internalGetMutableExtensions().ensureBuilderMap()
          .putAll(values);
      bitField0_ |= 0x00000010;
      return this;
    }
    /**
     * <pre>
     * Customized information not inspected by Open Match, to be used by the match
     * making function, evaluator, and components making calls to Open Match.
     * Optional, depending on the requirements of the connected systems.
     * </pre>
     *
     * <code>map&lt;string, .google.protobuf.Any&gt; extensions = 7 [json_name = "extensions"];</code>
     */
    public com.google.protobuf.Any.Builder putExtensionsBuilderIfAbsent(
        java.lang.String key) {
      java.util.Map<java.lang.String, com.google.protobuf.AnyOrBuilder> builderMap = internalGetMutableExtensions().ensureBuilderMap();
      com.google.protobuf.AnyOrBuilder entry = builderMap.get(key);
      if (entry == null) {
        entry = com.google.protobuf.Any.newBuilder();
        builderMap.put(key, entry);
      }
      if (entry instanceof com.google.protobuf.Any) {
        entry = ((com.google.protobuf.Any) entry).toBuilder();
        builderMap.put(key, entry);
      }
      return (com.google.protobuf.Any.Builder) entry;
    }

    private dev.openmatch.Backfill backfill_;
    private com.google.protobuf.SingleFieldBuilderV3<
        dev.openmatch.Backfill, dev.openmatch.Backfill.Builder, dev.openmatch.BackfillOrBuilder> backfillBuilder_;
    /**
     * <pre>
     * Backfill request which contains additional information to the match
     * and contains an association to a GameServer.
     * BETA FEATURE WARNING: This field is not finalized and still subject
     * to possible change or removal.
     * </pre>
     *
     * <code>.openmatch.Backfill backfill = 8 [json_name = "backfill"];</code>
     * @return Whether the backfill field is set.
     */
    public boolean hasBackfill() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Backfill request which contains additional information to the match
     * and contains an association to a GameServer.
     * BETA FEATURE WARNING: This field is not finalized and still subject
     * to possible change or removal.
     * </pre>
     *
     * <code>.openmatch.Backfill backfill = 8 [json_name = "backfill"];</code>
     * @return The backfill.
     */
    public dev.openmatch.Backfill getBackfill() {
      if (backfillBuilder_ == null) {
        return backfill_ == null ? dev.openmatch.Backfill.getDefaultInstance() : backfill_;
      } else {
        return backfillBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Backfill request which contains additional information to the match
     * and contains an association to a GameServer.
     * BETA FEATURE WARNING: This field is not finalized and still subject
     * to possible change or removal.
     * </pre>
     *
     * <code>.openmatch.Backfill backfill = 8 [json_name = "backfill"];</code>
     */
    public Builder setBackfill(dev.openmatch.Backfill value) {
      if (backfillBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        backfill_ = value;
      } else {
        backfillBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Backfill request which contains additional information to the match
     * and contains an association to a GameServer.
     * BETA FEATURE WARNING: This field is not finalized and still subject
     * to possible change or removal.
     * </pre>
     *
     * <code>.openmatch.Backfill backfill = 8 [json_name = "backfill"];</code>
     */
    public Builder setBackfill(
        dev.openmatch.Backfill.Builder builderForValue) {
      if (backfillBuilder_ == null) {
        backfill_ = builderForValue.build();
      } else {
        backfillBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Backfill request which contains additional information to the match
     * and contains an association to a GameServer.
     * BETA FEATURE WARNING: This field is not finalized and still subject
     * to possible change or removal.
     * </pre>
     *
     * <code>.openmatch.Backfill backfill = 8 [json_name = "backfill"];</code>
     */
    public Builder mergeBackfill(dev.openmatch.Backfill value) {
      if (backfillBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0) &&
          backfill_ != null &&
          backfill_ != dev.openmatch.Backfill.getDefaultInstance()) {
          getBackfillBuilder().mergeFrom(value);
        } else {
          backfill_ = value;
        }
      } else {
        backfillBuilder_.mergeFrom(value);
      }
      if (backfill_ != null) {
        bitField0_ |= 0x00000020;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Backfill request which contains additional information to the match
     * and contains an association to a GameServer.
     * BETA FEATURE WARNING: This field is not finalized and still subject
     * to possible change or removal.
     * </pre>
     *
     * <code>.openmatch.Backfill backfill = 8 [json_name = "backfill"];</code>
     */
    public Builder clearBackfill() {
      bitField0_ = (bitField0_ & ~0x00000020);
      backfill_ = null;
      if (backfillBuilder_ != null) {
        backfillBuilder_.dispose();
        backfillBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Backfill request which contains additional information to the match
     * and contains an association to a GameServer.
     * BETA FEATURE WARNING: This field is not finalized and still subject
     * to possible change or removal.
     * </pre>
     *
     * <code>.openmatch.Backfill backfill = 8 [json_name = "backfill"];</code>
     */
    public dev.openmatch.Backfill.Builder getBackfillBuilder() {
      bitField0_ |= 0x00000020;
      onChanged();
      return getBackfillFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Backfill request which contains additional information to the match
     * and contains an association to a GameServer.
     * BETA FEATURE WARNING: This field is not finalized and still subject
     * to possible change or removal.
     * </pre>
     *
     * <code>.openmatch.Backfill backfill = 8 [json_name = "backfill"];</code>
     */
    public dev.openmatch.BackfillOrBuilder getBackfillOrBuilder() {
      if (backfillBuilder_ != null) {
        return backfillBuilder_.getMessageOrBuilder();
      } else {
        return backfill_ == null ?
            dev.openmatch.Backfill.getDefaultInstance() : backfill_;
      }
    }
    /**
     * <pre>
     * Backfill request which contains additional information to the match
     * and contains an association to a GameServer.
     * BETA FEATURE WARNING: This field is not finalized and still subject
     * to possible change or removal.
     * </pre>
     *
     * <code>.openmatch.Backfill backfill = 8 [json_name = "backfill"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        dev.openmatch.Backfill, dev.openmatch.Backfill.Builder, dev.openmatch.BackfillOrBuilder> 
        getBackfillFieldBuilder() {
      if (backfillBuilder_ == null) {
        backfillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            dev.openmatch.Backfill, dev.openmatch.Backfill.Builder, dev.openmatch.BackfillOrBuilder>(
                getBackfill(),
                getParentForChildren(),
                isClean());
        backfill_ = null;
      }
      return backfillBuilder_;
    }

    private boolean allocateGameserver_ ;
    /**
     * <pre>
     * AllocateGameServer signalise Director that Backfill is new and it should 
     * allocate a GameServer, this Backfill would be assigned.
     * BETA FEATURE WARNING: This field is not finalized and still subject
     * to possible change or removal.
     * </pre>
     *
     * <code>bool allocate_gameserver = 9 [json_name = "allocateGameserver"];</code>
     * @return The allocateGameserver.
     */
    @java.lang.Override
    public boolean getAllocateGameserver() {
      return allocateGameserver_;
    }
    /**
     * <pre>
     * AllocateGameServer signalise Director that Backfill is new and it should 
     * allocate a GameServer, this Backfill would be assigned.
     * BETA FEATURE WARNING: This field is not finalized and still subject
     * to possible change or removal.
     * </pre>
     *
     * <code>bool allocate_gameserver = 9 [json_name = "allocateGameserver"];</code>
     * @param value The allocateGameserver to set.
     * @return This builder for chaining.
     */
    public Builder setAllocateGameserver(boolean value) {

      allocateGameserver_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * AllocateGameServer signalise Director that Backfill is new and it should 
     * allocate a GameServer, this Backfill would be assigned.
     * BETA FEATURE WARNING: This field is not finalized and still subject
     * to possible change or removal.
     * </pre>
     *
     * <code>bool allocate_gameserver = 9 [json_name = "allocateGameserver"];</code>
     * @return This builder for chaining.
     */
    public Builder clearAllocateGameserver() {
      bitField0_ = (bitField0_ & ~0x00000040);
      allocateGameserver_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:openmatch.Match)
  }

  // @@protoc_insertion_point(class_scope:openmatch.Match)
  private static final dev.openmatch.Match DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new dev.openmatch.Match();
  }

  public static dev.openmatch.Match getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Match>
      PARSER = new com.google.protobuf.AbstractParser<Match>() {
    @java.lang.Override
    public Match parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Match> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Match> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public dev.openmatch.Match getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

