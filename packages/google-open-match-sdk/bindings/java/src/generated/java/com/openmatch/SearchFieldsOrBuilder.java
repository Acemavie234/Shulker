// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/messages.proto

// Protobuf Java Version: 3.25.0
package com.openmatch;

public interface SearchFieldsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:openmatch.SearchFields)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Float arguments.  Filterable on ranges.
   * </pre>
   *
   * <code>map&lt;string, double&gt; double_args = 1 [json_name = "doubleArgs"];</code>
   */
  int getDoubleArgsCount();
  /**
   * <pre>
   * Float arguments.  Filterable on ranges.
   * </pre>
   *
   * <code>map&lt;string, double&gt; double_args = 1 [json_name = "doubleArgs"];</code>
   */
  boolean containsDoubleArgs(
      java.lang.String key);
  /**
   * Use {@link #getDoubleArgsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.Double>
  getDoubleArgs();
  /**
   * <pre>
   * Float arguments.  Filterable on ranges.
   * </pre>
   *
   * <code>map&lt;string, double&gt; double_args = 1 [json_name = "doubleArgs"];</code>
   */
  java.util.Map<java.lang.String, java.lang.Double>
  getDoubleArgsMap();
  /**
   * <pre>
   * Float arguments.  Filterable on ranges.
   * </pre>
   *
   * <code>map&lt;string, double&gt; double_args = 1 [json_name = "doubleArgs"];</code>
   */
  double getDoubleArgsOrDefault(
      java.lang.String key,
      double defaultValue);
  /**
   * <pre>
   * Float arguments.  Filterable on ranges.
   * </pre>
   *
   * <code>map&lt;string, double&gt; double_args = 1 [json_name = "doubleArgs"];</code>
   */
  double getDoubleArgsOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * String arguments.  Filterable on equality.
   * </pre>
   *
   * <code>map&lt;string, string&gt; string_args = 2 [json_name = "stringArgs"];</code>
   */
  int getStringArgsCount();
  /**
   * <pre>
   * String arguments.  Filterable on equality.
   * </pre>
   *
   * <code>map&lt;string, string&gt; string_args = 2 [json_name = "stringArgs"];</code>
   */
  boolean containsStringArgs(
      java.lang.String key);
  /**
   * Use {@link #getStringArgsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getStringArgs();
  /**
   * <pre>
   * String arguments.  Filterable on equality.
   * </pre>
   *
   * <code>map&lt;string, string&gt; string_args = 2 [json_name = "stringArgs"];</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getStringArgsMap();
  /**
   * <pre>
   * String arguments.  Filterable on equality.
   * </pre>
   *
   * <code>map&lt;string, string&gt; string_args = 2 [json_name = "stringArgs"];</code>
   */
  /* nullable */
java.lang.String getStringArgsOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * String arguments.  Filterable on equality.
   * </pre>
   *
   * <code>map&lt;string, string&gt; string_args = 2 [json_name = "stringArgs"];</code>
   */
  java.lang.String getStringArgsOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * Filterable on presence or absence of given value.
   * </pre>
   *
   * <code>repeated string tags = 3 [json_name = "tags"];</code>
   * @return A list containing the tags.
   */
  java.util.List<java.lang.String>
      getTagsList();
  /**
   * <pre>
   * Filterable on presence or absence of given value.
   * </pre>
   *
   * <code>repeated string tags = 3 [json_name = "tags"];</code>
   * @return The count of tags.
   */
  int getTagsCount();
  /**
   * <pre>
   * Filterable on presence or absence of given value.
   * </pre>
   *
   * <code>repeated string tags = 3 [json_name = "tags"];</code>
   * @param index The index of the element to return.
   * @return The tags at the given index.
   */
  java.lang.String getTags(int index);
  /**
   * <pre>
   * Filterable on presence or absence of given value.
   * </pre>
   *
   * <code>repeated string tags = 3 [json_name = "tags"];</code>
   * @param index The index of the value to return.
   * @return The bytes of the tags at the given index.
   */
  com.google.protobuf.ByteString
      getTagsBytes(int index);
}
