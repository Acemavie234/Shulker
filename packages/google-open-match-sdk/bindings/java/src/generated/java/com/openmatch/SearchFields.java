// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/messages.proto

// Protobuf Java Version: 3.25.0
package com.openmatch;

/**
 * <pre>
 * Search fields are the fields which Open Match is aware of, and can be used
 * when specifying filters.
 * </pre>
 *
 * Protobuf type {@code openmatch.SearchFields}
 */
public final class SearchFields extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:openmatch.SearchFields)
    SearchFieldsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SearchFields.newBuilder() to construct.
  private SearchFields(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SearchFields() {
    tags_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new SearchFields();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.openmatch.MessagesProto.internal_static_openmatch_SearchFields_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
      int number) {
    switch (number) {
      case 1:
        return internalGetDoubleArgs();
      case 2:
        return internalGetStringArgs();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.openmatch.MessagesProto.internal_static_openmatch_SearchFields_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.openmatch.SearchFields.class, com.openmatch.SearchFields.Builder.class);
  }

  public static final int DOUBLE_ARGS_FIELD_NUMBER = 1;
  private static final class DoubleArgsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.Double> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.Double>newDefaultInstance(
                com.openmatch.MessagesProto.internal_static_openmatch_SearchFields_DoubleArgsEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.DOUBLE,
                0D);
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.Double> doubleArgs_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.Double>
  internalGetDoubleArgs() {
    if (doubleArgs_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          DoubleArgsDefaultEntryHolder.defaultEntry);
    }
    return doubleArgs_;
  }
  public int getDoubleArgsCount() {
    return internalGetDoubleArgs().getMap().size();
  }
  /**
   * <pre>
   * Float arguments.  Filterable on ranges.
   * </pre>
   *
   * <code>map&lt;string, double&gt; double_args = 1 [json_name = "doubleArgs"];</code>
   */
  @java.lang.Override
  public boolean containsDoubleArgs(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetDoubleArgs().getMap().containsKey(key);
  }
  /**
   * Use {@link #getDoubleArgsMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.Double> getDoubleArgs() {
    return getDoubleArgsMap();
  }
  /**
   * <pre>
   * Float arguments.  Filterable on ranges.
   * </pre>
   *
   * <code>map&lt;string, double&gt; double_args = 1 [json_name = "doubleArgs"];</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, java.lang.Double> getDoubleArgsMap() {
    return internalGetDoubleArgs().getMap();
  }
  /**
   * <pre>
   * Float arguments.  Filterable on ranges.
   * </pre>
   *
   * <code>map&lt;string, double&gt; double_args = 1 [json_name = "doubleArgs"];</code>
   */
  @java.lang.Override
  public double getDoubleArgsOrDefault(
      java.lang.String key,
      double defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.Double> map =
        internalGetDoubleArgs().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Float arguments.  Filterable on ranges.
   * </pre>
   *
   * <code>map&lt;string, double&gt; double_args = 1 [json_name = "doubleArgs"];</code>
   */
  @java.lang.Override
  public double getDoubleArgsOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.Double> map =
        internalGetDoubleArgs().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int STRING_ARGS_FIELD_NUMBER = 2;
  private static final class StringArgsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.String>newDefaultInstance(
                com.openmatch.MessagesProto.internal_static_openmatch_SearchFields_StringArgsEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.String> stringArgs_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.String>
  internalGetStringArgs() {
    if (stringArgs_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          StringArgsDefaultEntryHolder.defaultEntry);
    }
    return stringArgs_;
  }
  public int getStringArgsCount() {
    return internalGetStringArgs().getMap().size();
  }
  /**
   * <pre>
   * String arguments.  Filterable on equality.
   * </pre>
   *
   * <code>map&lt;string, string&gt; string_args = 2 [json_name = "stringArgs"];</code>
   */
  @java.lang.Override
  public boolean containsStringArgs(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetStringArgs().getMap().containsKey(key);
  }
  /**
   * Use {@link #getStringArgsMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getStringArgs() {
    return getStringArgsMap();
  }
  /**
   * <pre>
   * String arguments.  Filterable on equality.
   * </pre>
   *
   * <code>map&lt;string, string&gt; string_args = 2 [json_name = "stringArgs"];</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, java.lang.String> getStringArgsMap() {
    return internalGetStringArgs().getMap();
  }
  /**
   * <pre>
   * String arguments.  Filterable on equality.
   * </pre>
   *
   * <code>map&lt;string, string&gt; string_args = 2 [json_name = "stringArgs"];</code>
   */
  @java.lang.Override
  public /* nullable */
java.lang.String getStringArgsOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetStringArgs().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * String arguments.  Filterable on equality.
   * </pre>
   *
   * <code>map&lt;string, string&gt; string_args = 2 [json_name = "stringArgs"];</code>
   */
  @java.lang.Override
  public java.lang.String getStringArgsOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetStringArgs().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int TAGS_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringArrayList tags_ =
      com.google.protobuf.LazyStringArrayList.emptyList();
  /**
   * <pre>
   * Filterable on presence or absence of given value.
   * </pre>
   *
   * <code>repeated string tags = 3 [json_name = "tags"];</code>
   * @return A list containing the tags.
   */
  public com.google.protobuf.ProtocolStringList
      getTagsList() {
    return tags_;
  }
  /**
   * <pre>
   * Filterable on presence or absence of given value.
   * </pre>
   *
   * <code>repeated string tags = 3 [json_name = "tags"];</code>
   * @return The count of tags.
   */
  public int getTagsCount() {
    return tags_.size();
  }
  /**
   * <pre>
   * Filterable on presence or absence of given value.
   * </pre>
   *
   * <code>repeated string tags = 3 [json_name = "tags"];</code>
   * @param index The index of the element to return.
   * @return The tags at the given index.
   */
  public java.lang.String getTags(int index) {
    return tags_.get(index);
  }
  /**
   * <pre>
   * Filterable on presence or absence of given value.
   * </pre>
   *
   * <code>repeated string tags = 3 [json_name = "tags"];</code>
   * @param index The index of the value to return.
   * @return The bytes of the tags at the given index.
   */
  public com.google.protobuf.ByteString
      getTagsBytes(int index) {
    return tags_.getByteString(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetDoubleArgs(),
        DoubleArgsDefaultEntryHolder.defaultEntry,
        1);
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetStringArgs(),
        StringArgsDefaultEntryHolder.defaultEntry,
        2);
    for (int i = 0; i < tags_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, tags_.getRaw(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (java.util.Map.Entry<java.lang.String, java.lang.Double> entry
         : internalGetDoubleArgs().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.Double>
      doubleArgs__ = DoubleArgsDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, doubleArgs__);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetStringArgs().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
      stringArgs__ = StringArgsDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, stringArgs__);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < tags_.size(); i++) {
        dataSize += computeStringSizeNoTag(tags_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getTagsList().size();
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.openmatch.SearchFields)) {
      return super.equals(obj);
    }
    com.openmatch.SearchFields other = (com.openmatch.SearchFields) obj;

    if (!internalGetDoubleArgs().equals(
        other.internalGetDoubleArgs())) return false;
    if (!internalGetStringArgs().equals(
        other.internalGetStringArgs())) return false;
    if (!getTagsList()
        .equals(other.getTagsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (!internalGetDoubleArgs().getMap().isEmpty()) {
      hash = (37 * hash) + DOUBLE_ARGS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetDoubleArgs().hashCode();
    }
    if (!internalGetStringArgs().getMap().isEmpty()) {
      hash = (37 * hash) + STRING_ARGS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetStringArgs().hashCode();
    }
    if (getTagsCount() > 0) {
      hash = (37 * hash) + TAGS_FIELD_NUMBER;
      hash = (53 * hash) + getTagsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.openmatch.SearchFields parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.openmatch.SearchFields parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.openmatch.SearchFields parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.openmatch.SearchFields parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.openmatch.SearchFields parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.openmatch.SearchFields parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.openmatch.SearchFields parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.openmatch.SearchFields parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.openmatch.SearchFields parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.openmatch.SearchFields parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.openmatch.SearchFields parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.openmatch.SearchFields parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.openmatch.SearchFields prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Search fields are the fields which Open Match is aware of, and can be used
   * when specifying filters.
   * </pre>
   *
   * Protobuf type {@code openmatch.SearchFields}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:openmatch.SearchFields)
      com.openmatch.SearchFieldsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.openmatch.MessagesProto.internal_static_openmatch_SearchFields_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
        int number) {
      switch (number) {
        case 1:
          return internalGetDoubleArgs();
        case 2:
          return internalGetStringArgs();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMutableMapFieldReflection(
        int number) {
      switch (number) {
        case 1:
          return internalGetMutableDoubleArgs();
        case 2:
          return internalGetMutableStringArgs();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.openmatch.MessagesProto.internal_static_openmatch_SearchFields_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.openmatch.SearchFields.class, com.openmatch.SearchFields.Builder.class);
    }

    // Construct using com.openmatch.SearchFields.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      internalGetMutableDoubleArgs().clear();
      internalGetMutableStringArgs().clear();
      tags_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.openmatch.MessagesProto.internal_static_openmatch_SearchFields_descriptor;
    }

    @java.lang.Override
    public com.openmatch.SearchFields getDefaultInstanceForType() {
      return com.openmatch.SearchFields.getDefaultInstance();
    }

    @java.lang.Override
    public com.openmatch.SearchFields build() {
      com.openmatch.SearchFields result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.openmatch.SearchFields buildPartial() {
      com.openmatch.SearchFields result = new com.openmatch.SearchFields(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.openmatch.SearchFields result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.doubleArgs_ = internalGetDoubleArgs();
        result.doubleArgs_.makeImmutable();
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.stringArgs_ = internalGetStringArgs();
        result.stringArgs_.makeImmutable();
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        tags_.makeImmutable();
        result.tags_ = tags_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.openmatch.SearchFields) {
        return mergeFrom((com.openmatch.SearchFields)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.openmatch.SearchFields other) {
      if (other == com.openmatch.SearchFields.getDefaultInstance()) return this;
      internalGetMutableDoubleArgs().mergeFrom(
          other.internalGetDoubleArgs());
      bitField0_ |= 0x00000001;
      internalGetMutableStringArgs().mergeFrom(
          other.internalGetStringArgs());
      bitField0_ |= 0x00000002;
      if (!other.tags_.isEmpty()) {
        if (tags_.isEmpty()) {
          tags_ = other.tags_;
          bitField0_ |= 0x00000004;
        } else {
          ensureTagsIsMutable();
          tags_.addAll(other.tags_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Double>
              doubleArgs__ = input.readMessage(
                  DoubleArgsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableDoubleArgs().getMutableMap().put(
                  doubleArgs__.getKey(), doubleArgs__.getValue());
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              stringArgs__ = input.readMessage(
                  StringArgsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableStringArgs().getMutableMap().put(
                  stringArgs__.getKey(), stringArgs__.getValue());
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureTagsIsMutable();
              tags_.add(s);
              break;
            } // case 26
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Double> doubleArgs_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Double>
        internalGetDoubleArgs() {
      if (doubleArgs_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            DoubleArgsDefaultEntryHolder.defaultEntry);
      }
      return doubleArgs_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.Double>
        internalGetMutableDoubleArgs() {
      if (doubleArgs_ == null) {
        doubleArgs_ = com.google.protobuf.MapField.newMapField(
            DoubleArgsDefaultEntryHolder.defaultEntry);
      }
      if (!doubleArgs_.isMutable()) {
        doubleArgs_ = doubleArgs_.copy();
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return doubleArgs_;
    }
    public int getDoubleArgsCount() {
      return internalGetDoubleArgs().getMap().size();
    }
    /**
     * <pre>
     * Float arguments.  Filterable on ranges.
     * </pre>
     *
     * <code>map&lt;string, double&gt; double_args = 1 [json_name = "doubleArgs"];</code>
     */
    @java.lang.Override
    public boolean containsDoubleArgs(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetDoubleArgs().getMap().containsKey(key);
    }
    /**
     * Use {@link #getDoubleArgsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Double> getDoubleArgs() {
      return getDoubleArgsMap();
    }
    /**
     * <pre>
     * Float arguments.  Filterable on ranges.
     * </pre>
     *
     * <code>map&lt;string, double&gt; double_args = 1 [json_name = "doubleArgs"];</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.Double> getDoubleArgsMap() {
      return internalGetDoubleArgs().getMap();
    }
    /**
     * <pre>
     * Float arguments.  Filterable on ranges.
     * </pre>
     *
     * <code>map&lt;string, double&gt; double_args = 1 [json_name = "doubleArgs"];</code>
     */
    @java.lang.Override
    public double getDoubleArgsOrDefault(
        java.lang.String key,
        double defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.Double> map =
          internalGetDoubleArgs().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Float arguments.  Filterable on ranges.
     * </pre>
     *
     * <code>map&lt;string, double&gt; double_args = 1 [json_name = "doubleArgs"];</code>
     */
    @java.lang.Override
    public double getDoubleArgsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.Double> map =
          internalGetDoubleArgs().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    public Builder clearDoubleArgs() {
      bitField0_ = (bitField0_ & ~0x00000001);
      internalGetMutableDoubleArgs().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * Float arguments.  Filterable on ranges.
     * </pre>
     *
     * <code>map&lt;string, double&gt; double_args = 1 [json_name = "doubleArgs"];</code>
     */
    public Builder removeDoubleArgs(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableDoubleArgs().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Double>
        getMutableDoubleArgs() {
      bitField0_ |= 0x00000001;
      return internalGetMutableDoubleArgs().getMutableMap();
    }
    /**
     * <pre>
     * Float arguments.  Filterable on ranges.
     * </pre>
     *
     * <code>map&lt;string, double&gt; double_args = 1 [json_name = "doubleArgs"];</code>
     */
    public Builder putDoubleArgs(
        java.lang.String key,
        double value) {
      if (key == null) { throw new NullPointerException("map key"); }

      internalGetMutableDoubleArgs().getMutableMap()
          .put(key, value);
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <pre>
     * Float arguments.  Filterable on ranges.
     * </pre>
     *
     * <code>map&lt;string, double&gt; double_args = 1 [json_name = "doubleArgs"];</code>
     */
    public Builder putAllDoubleArgs(
        java.util.Map<java.lang.String, java.lang.Double> values) {
      internalGetMutableDoubleArgs().getMutableMap()
          .putAll(values);
      bitField0_ |= 0x00000001;
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> stringArgs_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetStringArgs() {
      if (stringArgs_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            StringArgsDefaultEntryHolder.defaultEntry);
      }
      return stringArgs_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMutableStringArgs() {
      if (stringArgs_ == null) {
        stringArgs_ = com.google.protobuf.MapField.newMapField(
            StringArgsDefaultEntryHolder.defaultEntry);
      }
      if (!stringArgs_.isMutable()) {
        stringArgs_ = stringArgs_.copy();
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return stringArgs_;
    }
    public int getStringArgsCount() {
      return internalGetStringArgs().getMap().size();
    }
    /**
     * <pre>
     * String arguments.  Filterable on equality.
     * </pre>
     *
     * <code>map&lt;string, string&gt; string_args = 2 [json_name = "stringArgs"];</code>
     */
    @java.lang.Override
    public boolean containsStringArgs(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetStringArgs().getMap().containsKey(key);
    }
    /**
     * Use {@link #getStringArgsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getStringArgs() {
      return getStringArgsMap();
    }
    /**
     * <pre>
     * String arguments.  Filterable on equality.
     * </pre>
     *
     * <code>map&lt;string, string&gt; string_args = 2 [json_name = "stringArgs"];</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getStringArgsMap() {
      return internalGetStringArgs().getMap();
    }
    /**
     * <pre>
     * String arguments.  Filterable on equality.
     * </pre>
     *
     * <code>map&lt;string, string&gt; string_args = 2 [json_name = "stringArgs"];</code>
     */
    @java.lang.Override
    public /* nullable */
java.lang.String getStringArgsOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetStringArgs().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * String arguments.  Filterable on equality.
     * </pre>
     *
     * <code>map&lt;string, string&gt; string_args = 2 [json_name = "stringArgs"];</code>
     */
    @java.lang.Override
    public java.lang.String getStringArgsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetStringArgs().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    public Builder clearStringArgs() {
      bitField0_ = (bitField0_ & ~0x00000002);
      internalGetMutableStringArgs().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * String arguments.  Filterable on equality.
     * </pre>
     *
     * <code>map&lt;string, string&gt; string_args = 2 [json_name = "stringArgs"];</code>
     */
    public Builder removeStringArgs(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableStringArgs().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String>
        getMutableStringArgs() {
      bitField0_ |= 0x00000002;
      return internalGetMutableStringArgs().getMutableMap();
    }
    /**
     * <pre>
     * String arguments.  Filterable on equality.
     * </pre>
     *
     * <code>map&lt;string, string&gt; string_args = 2 [json_name = "stringArgs"];</code>
     */
    public Builder putStringArgs(
        java.lang.String key,
        java.lang.String value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) { throw new NullPointerException("map value"); }
      internalGetMutableStringArgs().getMutableMap()
          .put(key, value);
      bitField0_ |= 0x00000002;
      return this;
    }
    /**
     * <pre>
     * String arguments.  Filterable on equality.
     * </pre>
     *
     * <code>map&lt;string, string&gt; string_args = 2 [json_name = "stringArgs"];</code>
     */
    public Builder putAllStringArgs(
        java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableStringArgs().getMutableMap()
          .putAll(values);
      bitField0_ |= 0x00000002;
      return this;
    }

    private com.google.protobuf.LazyStringArrayList tags_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    private void ensureTagsIsMutable() {
      if (!tags_.isModifiable()) {
        tags_ = new com.google.protobuf.LazyStringArrayList(tags_);
      }
      bitField0_ |= 0x00000004;
    }
    /**
     * <pre>
     * Filterable on presence or absence of given value.
     * </pre>
     *
     * <code>repeated string tags = 3 [json_name = "tags"];</code>
     * @return A list containing the tags.
     */
    public com.google.protobuf.ProtocolStringList
        getTagsList() {
      tags_.makeImmutable();
      return tags_;
    }
    /**
     * <pre>
     * Filterable on presence or absence of given value.
     * </pre>
     *
     * <code>repeated string tags = 3 [json_name = "tags"];</code>
     * @return The count of tags.
     */
    public int getTagsCount() {
      return tags_.size();
    }
    /**
     * <pre>
     * Filterable on presence or absence of given value.
     * </pre>
     *
     * <code>repeated string tags = 3 [json_name = "tags"];</code>
     * @param index The index of the element to return.
     * @return The tags at the given index.
     */
    public java.lang.String getTags(int index) {
      return tags_.get(index);
    }
    /**
     * <pre>
     * Filterable on presence or absence of given value.
     * </pre>
     *
     * <code>repeated string tags = 3 [json_name = "tags"];</code>
     * @param index The index of the value to return.
     * @return The bytes of the tags at the given index.
     */
    public com.google.protobuf.ByteString
        getTagsBytes(int index) {
      return tags_.getByteString(index);
    }
    /**
     * <pre>
     * Filterable on presence or absence of given value.
     * </pre>
     *
     * <code>repeated string tags = 3 [json_name = "tags"];</code>
     * @param index The index to set the value at.
     * @param value The tags to set.
     * @return This builder for chaining.
     */
    public Builder setTags(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureTagsIsMutable();
      tags_.set(index, value);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Filterable on presence or absence of given value.
     * </pre>
     *
     * <code>repeated string tags = 3 [json_name = "tags"];</code>
     * @param value The tags to add.
     * @return This builder for chaining.
     */
    public Builder addTags(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureTagsIsMutable();
      tags_.add(value);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Filterable on presence or absence of given value.
     * </pre>
     *
     * <code>repeated string tags = 3 [json_name = "tags"];</code>
     * @param values The tags to add.
     * @return This builder for chaining.
     */
    public Builder addAllTags(
        java.lang.Iterable<java.lang.String> values) {
      ensureTagsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, tags_);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Filterable on presence or absence of given value.
     * </pre>
     *
     * <code>repeated string tags = 3 [json_name = "tags"];</code>
     * @return This builder for chaining.
     */
    public Builder clearTags() {
      tags_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
      bitField0_ = (bitField0_ & ~0x00000004);;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Filterable on presence or absence of given value.
     * </pre>
     *
     * <code>repeated string tags = 3 [json_name = "tags"];</code>
     * @param value The bytes of the tags to add.
     * @return This builder for chaining.
     */
    public Builder addTagsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureTagsIsMutable();
      tags_.add(value);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:openmatch.SearchFields)
  }

  // @@protoc_insertion_point(class_scope:openmatch.SearchFields)
  private static final com.openmatch.SearchFields DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.openmatch.SearchFields();
  }

  public static com.openmatch.SearchFields getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SearchFields>
      PARSER = new com.google.protobuf.AbstractParser<SearchFields>() {
    @java.lang.Override
    public SearchFields parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<SearchFields> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SearchFields> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.openmatch.SearchFields getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

