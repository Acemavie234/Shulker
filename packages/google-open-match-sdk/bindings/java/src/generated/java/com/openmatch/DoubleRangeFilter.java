// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/messages.proto

// Protobuf Java Version: 3.25.0
package com.openmatch;

/**
 * <pre>
 * Filters numerical values to only those within a range.
 *   double_arg: "foo"
 *   max: 10
 *   min: 5
 * matches:
 *   {"foo": 5}
 *   {"foo": 7.5}
 *   {"foo": 10}
 * does not match:
 *   {"foo": 4}
 *   {"foo": 10.01}
 *   {"foo": "7.5"}
 *   {}
 * </pre>
 *
 * Protobuf type {@code openmatch.DoubleRangeFilter}
 */
public final class DoubleRangeFilter extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:openmatch.DoubleRangeFilter)
    DoubleRangeFilterOrBuilder {
private static final long serialVersionUID = 0L;
  // Use DoubleRangeFilter.newBuilder() to construct.
  private DoubleRangeFilter(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DoubleRangeFilter() {
    doubleArg_ = "";
    exclude_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new DoubleRangeFilter();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.openmatch.MessagesProto.internal_static_openmatch_DoubleRangeFilter_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.openmatch.MessagesProto.internal_static_openmatch_DoubleRangeFilter_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.openmatch.DoubleRangeFilter.class, com.openmatch.DoubleRangeFilter.Builder.class);
  }

  /**
   * Protobuf enum {@code openmatch.DoubleRangeFilter.Exclude}
   */
  public enum Exclude
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * No bounds should be excluded when evaluating the filter, i.e.: MIN &lt;= x &lt;= MAX
     * </pre>
     *
     * <code>NONE = 0;</code>
     */
    NONE(0),
    /**
     * <pre>
     * Only the minimum bound should be excluded when evaluating the filter, i.e.: MIN &lt; x &lt;= MAX
     * </pre>
     *
     * <code>MIN = 1;</code>
     */
    MIN(1),
    /**
     * <pre>
     * Only the maximum bound should be excluded when evaluating the filter, i.e.: MIN &lt;= x &lt; MAX
     * </pre>
     *
     * <code>MAX = 2;</code>
     */
    MAX(2),
    /**
     * <pre>
     * Both bounds should be excluded when evaluating the filter, i.e.: MIN &lt; x &lt; MAX
     * </pre>
     *
     * <code>BOTH = 3;</code>
     */
    BOTH(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * No bounds should be excluded when evaluating the filter, i.e.: MIN &lt;= x &lt;= MAX
     * </pre>
     *
     * <code>NONE = 0;</code>
     */
    public static final int NONE_VALUE = 0;
    /**
     * <pre>
     * Only the minimum bound should be excluded when evaluating the filter, i.e.: MIN &lt; x &lt;= MAX
     * </pre>
     *
     * <code>MIN = 1;</code>
     */
    public static final int MIN_VALUE = 1;
    /**
     * <pre>
     * Only the maximum bound should be excluded when evaluating the filter, i.e.: MIN &lt;= x &lt; MAX
     * </pre>
     *
     * <code>MAX = 2;</code>
     */
    public static final int MAX_VALUE = 2;
    /**
     * <pre>
     * Both bounds should be excluded when evaluating the filter, i.e.: MIN &lt; x &lt; MAX
     * </pre>
     *
     * <code>BOTH = 3;</code>
     */
    public static final int BOTH_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Exclude valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Exclude forNumber(int value) {
      switch (value) {
        case 0: return NONE;
        case 1: return MIN;
        case 2: return MAX;
        case 3: return BOTH;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Exclude>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Exclude> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Exclude>() {
            public Exclude findValueByNumber(int number) {
              return Exclude.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.openmatch.DoubleRangeFilter.getDescriptor().getEnumTypes().get(0);
    }

    private static final Exclude[] VALUES = values();

    public static Exclude valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Exclude(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openmatch.DoubleRangeFilter.Exclude)
  }

  public static final int DOUBLE_ARG_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object doubleArg_ = "";
  /**
   * <pre>
   * Name of the ticket's search_fields.double_args this Filter operates on.
   * </pre>
   *
   * <code>string double_arg = 1 [json_name = "doubleArg"];</code>
   * @return The doubleArg.
   */
  @java.lang.Override
  public java.lang.String getDoubleArg() {
    java.lang.Object ref = doubleArg_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      doubleArg_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Name of the ticket's search_fields.double_args this Filter operates on.
   * </pre>
   *
   * <code>string double_arg = 1 [json_name = "doubleArg"];</code>
   * @return The bytes for doubleArg.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDoubleArgBytes() {
    java.lang.Object ref = doubleArg_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      doubleArg_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int MAX_FIELD_NUMBER = 2;
  private double max_ = 0D;
  /**
   * <pre>
   * Maximum value.
   * </pre>
   *
   * <code>double max = 2 [json_name = "max"];</code>
   * @return The max.
   */
  @java.lang.Override
  public double getMax() {
    return max_;
  }

  public static final int MIN_FIELD_NUMBER = 3;
  private double min_ = 0D;
  /**
   * <pre>
   * Minimum value.
   * </pre>
   *
   * <code>double min = 3 [json_name = "min"];</code>
   * @return The min.
   */
  @java.lang.Override
  public double getMin() {
    return min_;
  }

  public static final int EXCLUDE_FIELD_NUMBER = 4;
  private int exclude_ = 0;
  /**
   * <pre>
   * Defines the bounds to apply when filtering tickets by their search_fields.double_args value.
   * BETA FEATURE WARNING: This field and the associated values are
   * not finalized and still subject to possible change or removal.
   * </pre>
   *
   * <code>.openmatch.DoubleRangeFilter.Exclude exclude = 4 [json_name = "exclude"];</code>
   * @return The enum numeric value on the wire for exclude.
   */
  @java.lang.Override public int getExcludeValue() {
    return exclude_;
  }
  /**
   * <pre>
   * Defines the bounds to apply when filtering tickets by their search_fields.double_args value.
   * BETA FEATURE WARNING: This field and the associated values are
   * not finalized and still subject to possible change or removal.
   * </pre>
   *
   * <code>.openmatch.DoubleRangeFilter.Exclude exclude = 4 [json_name = "exclude"];</code>
   * @return The exclude.
   */
  @java.lang.Override public com.openmatch.DoubleRangeFilter.Exclude getExclude() {
    com.openmatch.DoubleRangeFilter.Exclude result = com.openmatch.DoubleRangeFilter.Exclude.forNumber(exclude_);
    return result == null ? com.openmatch.DoubleRangeFilter.Exclude.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(doubleArg_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, doubleArg_);
    }
    if (java.lang.Double.doubleToRawLongBits(max_) != 0) {
      output.writeDouble(2, max_);
    }
    if (java.lang.Double.doubleToRawLongBits(min_) != 0) {
      output.writeDouble(3, min_);
    }
    if (exclude_ != com.openmatch.DoubleRangeFilter.Exclude.NONE.getNumber()) {
      output.writeEnum(4, exclude_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(doubleArg_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, doubleArg_);
    }
    if (java.lang.Double.doubleToRawLongBits(max_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(2, max_);
    }
    if (java.lang.Double.doubleToRawLongBits(min_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(3, min_);
    }
    if (exclude_ != com.openmatch.DoubleRangeFilter.Exclude.NONE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(4, exclude_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.openmatch.DoubleRangeFilter)) {
      return super.equals(obj);
    }
    com.openmatch.DoubleRangeFilter other = (com.openmatch.DoubleRangeFilter) obj;

    if (!getDoubleArg()
        .equals(other.getDoubleArg())) return false;
    if (java.lang.Double.doubleToLongBits(getMax())
        != java.lang.Double.doubleToLongBits(
            other.getMax())) return false;
    if (java.lang.Double.doubleToLongBits(getMin())
        != java.lang.Double.doubleToLongBits(
            other.getMin())) return false;
    if (exclude_ != other.exclude_) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + DOUBLE_ARG_FIELD_NUMBER;
    hash = (53 * hash) + getDoubleArg().hashCode();
    hash = (37 * hash) + MAX_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getMax()));
    hash = (37 * hash) + MIN_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getMin()));
    hash = (37 * hash) + EXCLUDE_FIELD_NUMBER;
    hash = (53 * hash) + exclude_;
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.openmatch.DoubleRangeFilter parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.openmatch.DoubleRangeFilter parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.openmatch.DoubleRangeFilter parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.openmatch.DoubleRangeFilter parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.openmatch.DoubleRangeFilter parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.openmatch.DoubleRangeFilter parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.openmatch.DoubleRangeFilter parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.openmatch.DoubleRangeFilter parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.openmatch.DoubleRangeFilter parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.openmatch.DoubleRangeFilter parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.openmatch.DoubleRangeFilter parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.openmatch.DoubleRangeFilter parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.openmatch.DoubleRangeFilter prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Filters numerical values to only those within a range.
   *   double_arg: "foo"
   *   max: 10
   *   min: 5
   * matches:
   *   {"foo": 5}
   *   {"foo": 7.5}
   *   {"foo": 10}
   * does not match:
   *   {"foo": 4}
   *   {"foo": 10.01}
   *   {"foo": "7.5"}
   *   {}
   * </pre>
   *
   * Protobuf type {@code openmatch.DoubleRangeFilter}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:openmatch.DoubleRangeFilter)
      com.openmatch.DoubleRangeFilterOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.openmatch.MessagesProto.internal_static_openmatch_DoubleRangeFilter_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.openmatch.MessagesProto.internal_static_openmatch_DoubleRangeFilter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.openmatch.DoubleRangeFilter.class, com.openmatch.DoubleRangeFilter.Builder.class);
    }

    // Construct using com.openmatch.DoubleRangeFilter.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      doubleArg_ = "";
      max_ = 0D;
      min_ = 0D;
      exclude_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.openmatch.MessagesProto.internal_static_openmatch_DoubleRangeFilter_descriptor;
    }

    @java.lang.Override
    public com.openmatch.DoubleRangeFilter getDefaultInstanceForType() {
      return com.openmatch.DoubleRangeFilter.getDefaultInstance();
    }

    @java.lang.Override
    public com.openmatch.DoubleRangeFilter build() {
      com.openmatch.DoubleRangeFilter result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.openmatch.DoubleRangeFilter buildPartial() {
      com.openmatch.DoubleRangeFilter result = new com.openmatch.DoubleRangeFilter(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.openmatch.DoubleRangeFilter result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.doubleArg_ = doubleArg_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.max_ = max_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.min_ = min_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.exclude_ = exclude_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.openmatch.DoubleRangeFilter) {
        return mergeFrom((com.openmatch.DoubleRangeFilter)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.openmatch.DoubleRangeFilter other) {
      if (other == com.openmatch.DoubleRangeFilter.getDefaultInstance()) return this;
      if (!other.getDoubleArg().isEmpty()) {
        doubleArg_ = other.doubleArg_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.getMax() != 0D) {
        setMax(other.getMax());
      }
      if (other.getMin() != 0D) {
        setMin(other.getMin());
      }
      if (other.exclude_ != 0) {
        setExcludeValue(other.getExcludeValue());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              doubleArg_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 17: {
              max_ = input.readDouble();
              bitField0_ |= 0x00000002;
              break;
            } // case 17
            case 25: {
              min_ = input.readDouble();
              bitField0_ |= 0x00000004;
              break;
            } // case 25
            case 32: {
              exclude_ = input.readEnum();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object doubleArg_ = "";
    /**
     * <pre>
     * Name of the ticket's search_fields.double_args this Filter operates on.
     * </pre>
     *
     * <code>string double_arg = 1 [json_name = "doubleArg"];</code>
     * @return The doubleArg.
     */
    public java.lang.String getDoubleArg() {
      java.lang.Object ref = doubleArg_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        doubleArg_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Name of the ticket's search_fields.double_args this Filter operates on.
     * </pre>
     *
     * <code>string double_arg = 1 [json_name = "doubleArg"];</code>
     * @return The bytes for doubleArg.
     */
    public com.google.protobuf.ByteString
        getDoubleArgBytes() {
      java.lang.Object ref = doubleArg_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        doubleArg_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Name of the ticket's search_fields.double_args this Filter operates on.
     * </pre>
     *
     * <code>string double_arg = 1 [json_name = "doubleArg"];</code>
     * @param value The doubleArg to set.
     * @return This builder for chaining.
     */
    public Builder setDoubleArg(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      doubleArg_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Name of the ticket's search_fields.double_args this Filter operates on.
     * </pre>
     *
     * <code>string double_arg = 1 [json_name = "doubleArg"];</code>
     * @return This builder for chaining.
     */
    public Builder clearDoubleArg() {
      doubleArg_ = getDefaultInstance().getDoubleArg();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Name of the ticket's search_fields.double_args this Filter operates on.
     * </pre>
     *
     * <code>string double_arg = 1 [json_name = "doubleArg"];</code>
     * @param value The bytes for doubleArg to set.
     * @return This builder for chaining.
     */
    public Builder setDoubleArgBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      doubleArg_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private double max_ ;
    /**
     * <pre>
     * Maximum value.
     * </pre>
     *
     * <code>double max = 2 [json_name = "max"];</code>
     * @return The max.
     */
    @java.lang.Override
    public double getMax() {
      return max_;
    }
    /**
     * <pre>
     * Maximum value.
     * </pre>
     *
     * <code>double max = 2 [json_name = "max"];</code>
     * @param value The max to set.
     * @return This builder for chaining.
     */
    public Builder setMax(double value) {

      max_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Maximum value.
     * </pre>
     *
     * <code>double max = 2 [json_name = "max"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMax() {
      bitField0_ = (bitField0_ & ~0x00000002);
      max_ = 0D;
      onChanged();
      return this;
    }

    private double min_ ;
    /**
     * <pre>
     * Minimum value.
     * </pre>
     *
     * <code>double min = 3 [json_name = "min"];</code>
     * @return The min.
     */
    @java.lang.Override
    public double getMin() {
      return min_;
    }
    /**
     * <pre>
     * Minimum value.
     * </pre>
     *
     * <code>double min = 3 [json_name = "min"];</code>
     * @param value The min to set.
     * @return This builder for chaining.
     */
    public Builder setMin(double value) {

      min_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Minimum value.
     * </pre>
     *
     * <code>double min = 3 [json_name = "min"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMin() {
      bitField0_ = (bitField0_ & ~0x00000004);
      min_ = 0D;
      onChanged();
      return this;
    }

    private int exclude_ = 0;
    /**
     * <pre>
     * Defines the bounds to apply when filtering tickets by their search_fields.double_args value.
     * BETA FEATURE WARNING: This field and the associated values are
     * not finalized and still subject to possible change or removal.
     * </pre>
     *
     * <code>.openmatch.DoubleRangeFilter.Exclude exclude = 4 [json_name = "exclude"];</code>
     * @return The enum numeric value on the wire for exclude.
     */
    @java.lang.Override public int getExcludeValue() {
      return exclude_;
    }
    /**
     * <pre>
     * Defines the bounds to apply when filtering tickets by their search_fields.double_args value.
     * BETA FEATURE WARNING: This field and the associated values are
     * not finalized and still subject to possible change or removal.
     * </pre>
     *
     * <code>.openmatch.DoubleRangeFilter.Exclude exclude = 4 [json_name = "exclude"];</code>
     * @param value The enum numeric value on the wire for exclude to set.
     * @return This builder for chaining.
     */
    public Builder setExcludeValue(int value) {
      exclude_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Defines the bounds to apply when filtering tickets by their search_fields.double_args value.
     * BETA FEATURE WARNING: This field and the associated values are
     * not finalized and still subject to possible change or removal.
     * </pre>
     *
     * <code>.openmatch.DoubleRangeFilter.Exclude exclude = 4 [json_name = "exclude"];</code>
     * @return The exclude.
     */
    @java.lang.Override
    public com.openmatch.DoubleRangeFilter.Exclude getExclude() {
      com.openmatch.DoubleRangeFilter.Exclude result = com.openmatch.DoubleRangeFilter.Exclude.forNumber(exclude_);
      return result == null ? com.openmatch.DoubleRangeFilter.Exclude.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Defines the bounds to apply when filtering tickets by their search_fields.double_args value.
     * BETA FEATURE WARNING: This field and the associated values are
     * not finalized and still subject to possible change or removal.
     * </pre>
     *
     * <code>.openmatch.DoubleRangeFilter.Exclude exclude = 4 [json_name = "exclude"];</code>
     * @param value The exclude to set.
     * @return This builder for chaining.
     */
    public Builder setExclude(com.openmatch.DoubleRangeFilter.Exclude value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000008;
      exclude_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Defines the bounds to apply when filtering tickets by their search_fields.double_args value.
     * BETA FEATURE WARNING: This field and the associated values are
     * not finalized and still subject to possible change or removal.
     * </pre>
     *
     * <code>.openmatch.DoubleRangeFilter.Exclude exclude = 4 [json_name = "exclude"];</code>
     * @return This builder for chaining.
     */
    public Builder clearExclude() {
      bitField0_ = (bitField0_ & ~0x00000008);
      exclude_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:openmatch.DoubleRangeFilter)
  }

  // @@protoc_insertion_point(class_scope:openmatch.DoubleRangeFilter)
  private static final com.openmatch.DoubleRangeFilter DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.openmatch.DoubleRangeFilter();
  }

  public static com.openmatch.DoubleRangeFilter getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DoubleRangeFilter>
      PARSER = new com.google.protobuf.AbstractParser<DoubleRangeFilter>() {
    @java.lang.Override
    public DoubleRangeFilter parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<DoubleRangeFilter> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DoubleRangeFilter> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.openmatch.DoubleRangeFilter getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

